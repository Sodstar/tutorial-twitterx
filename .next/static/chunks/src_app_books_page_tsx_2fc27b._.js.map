{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/books/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Page() {\n  interface Book {\n    id: number;\n    title: string;\n    author: string;\n  }\n\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    // Fetch data from the backend using axios\n    const fetchData = async () => {\n      try {\n        const res = await axios.get('http://localhost:8080/post');\n        setBooks(res.data); // Assuming the response data is an array of books\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n\n    fetchData(); // Call the async function\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  return (\n    <div>\n      <h1>Бүх ном</h1>\n      <ul>\n        {books.map((book) => (\n          <li key={book.id}>\n            {book.title} by {book.author}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Page;"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIA,SAAS;;IAOP,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,0CAA0C;YAC1C,MAAM;4CAAY;oBAChB,IAAI;wBACF,MAAM,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;wBAC5B,SAAS,IAAI,IAAI,GAAG,kDAAkD;oBACxE,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,yBAAyB;oBACzC;gBACF;;YAEA,aAAa,0BAA0B;QACzC;yBAAG,EAAE,GAAG,8DAA8D;IAEtE,qBACE,6LAAC;;0BACC,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;0BACE,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;;4BACE,KAAK,KAAK;4BAAC;4BAAK,KAAK,MAAM;;uBADrB,KAAK,EAAE;;;;;;;;;;;;;;;;AAO1B;GAnCS;KAAA;uCAqCM"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}