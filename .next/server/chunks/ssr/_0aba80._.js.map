{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/dist/esm/app-router/server-actions.js"],"sourcesContent":["\"use server\";\nimport { cookies } from \"next/headers\";\nasync function invalidateCacheAction() {\n  void (await cookies()).delete(`__clerk_invalidate_cache_cookie_${Date.now()}`);\n}\nexport {\n  invalidateCacheAction\n};\n"],"names":[],"mappings":";;;;;AACA;;;;;AACA,eAAe;IACb,KAAK,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,MAAM,CAAC,CAAC,gCAAgC,EAAE,KAAK,GAAG,IAAI;AAC/E;;;;IAEE,uCAAmB,GAAnB;;AAAA,+OAAA","ignoreList":[0]}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/utils/sdk-versions.ts"],"sourcesContent":["import nextPkg from 'next/package.json';\n\nconst isNext13 = nextPkg.version.startsWith('13.');\n\n/**\n * Those versions are affected by a bundling issue that will break the application if `node:fs` is used inside a server function.\n * The affected versions are >=next@13.5.4 and <=next@14.0.4\n */\nconst isNextWithUnstableServerActions = isNext13 || nextPkg.version.startsWith('14.0');\n\nexport { isNext13, isNextWithUnstableServerActions };\n"],"names":[],"mappings":";;;;AAAA,OAAO,aAAa;;;AAEpB,MAAM,mHAAW,UAAA,CAAQ,OAAA,CAAQ,UAAA,CAAW,KAAK;AAMjD,MAAM,kCAAkC,oHAAY,UAAA,CAAQ,OAAA,CAAQ,UAAA,CAAW,MAAM","ignoreList":[0]}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/constants.ts"],"sourcesContent":["import { apiUrlFromPublishableKey } from '@clerk/shared/apiUrlFromPublishableKey';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nexport const CLERK_JS_VERSION = process.env.NEXT_PUBLIC_CLERK_JS_VERSION || '';\nexport const CLERK_JS_URL = process.env.NEXT_PUBLIC_CLERK_JS_URL || '';\nexport const API_VERSION = process.env.CLERK_API_VERSION || 'v1';\nexport const SECRET_KEY = process.env.CLERK_SECRET_KEY || '';\nexport const PUBLISHABLE_KEY = process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY || '';\nexport const ENCRYPTION_KEY = process.env.CLERK_ENCRYPTION_KEY || '';\nexport const API_URL = process.env.CLERK_API_URL || apiUrlFromPublishableKey(PUBLISHABLE_KEY);\nexport const DOMAIN = process.env.NEXT_PUBLIC_CLERK_DOMAIN || '';\nexport const PROXY_URL = process.env.NEXT_PUBLIC_CLERK_PROXY_URL || '';\nexport const IS_SATELLITE = isTruthy(process.env.NEXT_PUBLIC_CLERK_IS_SATELLITE) || false;\nexport const SIGN_IN_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL || '';\nexport const SIGN_UP_URL = process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL || '';\nexport const SDK_METADATA = {\n  name: PACKAGE_NAME,\n  version: PACKAGE_VERSION,\n  environment: process.env.NODE_ENV,\n};\n\nexport const TELEMETRY_DISABLED = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DISABLED);\nexport const TELEMETRY_DEBUG = isTruthy(process.env.NEXT_PUBLIC_CLERK_TELEMETRY_DEBUG);\n\nexport const KEYLESS_DISABLED = isTruthy(process.env.NEXT_PUBLIC_CLERK_KEYLESS_DISABLED) || false;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAS,gCAAgC;AACzC,SAAS,gBAAgB;;;;;;AAElB,MAAM,mBAAmB,QAAQ,GAAA,CAAI,4BAAA,IAAgC;AACrE,MAAM,eAAe,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AAC7D,MAAM,cAAc,QAAQ,GAAA,CAAI,iBAAA,IAAqB;AACrD,MAAM,aAAa,QAAQ,GAAA,CAAI,gBAAA,IAAoB;AACnD,MAAM,kBAAkB,QAAQ,IAAI,uFAAqC;AACzE,MAAM,iBAAiB,QAAQ,GAAA,CAAI,oBAAA,IAAwB;AAC3D,MAAM,UAAU,QAAQ,GAAA,CAAI,aAAA,wKAAiB,2BAAA,EAAyB,eAAe;AACrF,MAAM,SAAS,QAAQ,GAAA,CAAI,wBAAA,IAA4B;AACvD,MAAM,YAAY,QAAQ,GAAA,CAAI,2BAAA,IAA+B;AAC7D,MAAM,mLAAe,WAAA,EAAS,QAAQ,GAAA,CAAI,8BAA8B,KAAK;AAC7E,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,cAAc,QAAQ,GAAA,CAAI,6BAAA,IAAiC;AACjE,MAAM,eAAe;IAC1B,MAAM;IACN,SAAS;IACT,WAAA,EAAa,QAAQ,IAAI;AAC3B;AAEO,MAAM,yLAAqB,WAAA,EAAS,QAAQ,GAAA,CAAI,oCAAoC;AACpF,MAAM,sLAAkB,WAAA,EAAS,QAAQ,GAAA,CAAI,iCAAiC;AAE9E,MAAM,uLAAmB,WAAA,EAAS,QAAQ,GAAA,CAAI,kCAAkC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/utils/feature-flags.ts"],"sourcesContent":["import { isDevelopmentEnvironment } from '@clerk/shared/utils';\n\nimport { KEYLESS_DISABLED } from '../server/constants';\nimport { isNextWithUnstableServerActions } from './sdk-versions';\n\nconst canUseKeyless =\n  !isNextWithUnstableServerActions &&\n  // Next.js will inline the value of 'development' or 'production' on the client bundle, so this is client-safe.\n  isDevelopmentEnvironment() &&\n  !KEYLESS_DISABLED;\n\nexport { canUseKeyless };\n"],"names":[],"mappings":";;;;AAGA,SAAS,uCAAuC;AAHhD,SAAS,gCAAgC;AAEzC,SAAS,wBAAwB;;;;;AAGjC,MAAM,gBACJ,8KAAC,kCAAA,IAAA,+GAAA;oKAED,2BAAA,CAAyB,MACzB,yKAAC,mBAAA","ignoreList":[0]}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/keyless.ts"],"sourcesContent":["import type { AccountlessApplication } from '@clerk/backend';\nimport hex from 'crypto-js/enc-hex';\nimport sha256 from 'crypto-js/sha256';\n\nimport { canUseKeyless } from '../utils/feature-flags';\n\nconst keylessCookiePrefix = `__clerk_keys_`;\n\nconst getKeylessCookieName = (): string => {\n  // eslint-disable-next-line turbo/no-undeclared-env-vars\n  const PATH = process.env.PWD;\n\n  // Handle gracefully missing PWD\n  if (!PATH) {\n    return `${keylessCookiePrefix}${0}`;\n  }\n\n  const lastThreeDirs = PATH.split('/').filter(Boolean).slice(-3).reverse().join('/');\n\n  // Hash the resulting string\n  const hash = hashString(lastThreeDirs);\n\n  return `${keylessCookiePrefix}${hash}`;\n};\n\nfunction hashString(str: string) {\n  return sha256(str).toString(hex).slice(0, 16); // Take only the first 16 characters\n}\n\nfunction getKeylessCookieValue(getter: (cookieName: string) => string | undefined): AccountlessApplication | undefined {\n  if (!canUseKeyless) {\n    return undefined;\n  }\n\n  const keylessCookieName = getKeylessCookieName();\n  let keyless;\n\n  try {\n    if (keylessCookieName) {\n      keyless = JSON.parse(getter(keylessCookieName) || '{}');\n    }\n  } catch {\n    keyless = undefined;\n  }\n\n  return keyless;\n}\n\nexport { getKeylessCookieValue, getKeylessCookieName };\n"],"names":[],"mappings":";;;;AACA,OAAO,SAAS;AAChB,OAAO,YAAY;AAEnB,SAAS,qBAAqB;;;;;AAE9B,MAAM,sBAAsB,CAAA,aAAA,CAAA;AAE5B,MAAM,uBAAuB,MAAc;IAEzC,MAAM,OAAO,QAAQ,GAAA,CAAI,GAAA;IAGzB,IAAI,CAAC,MAAM;QACT,OAAO,GAAG,mBAAmB,GAAG,CAAC,EAAA;IACnC;IAEA,MAAM,gBAAgB,KAAK,KAAA,CAAM,GAAG,EAAE,MAAA,CAAO,OAAO,EAAE,KAAA,CAAM,CAAA,CAAE,EAAE,OAAA,CAAQ,EAAE,IAAA,CAAK,GAAG;IAGlF,MAAM,OAAO,WAAW,aAAa;IAErC,OAAO,GAAG,mBAAmB,GAAG,IAAI,EAAA;AACtC;AAEA,SAAS,WAAW,GAAA,EAAa;IAC/B,QAAO,oJAAA,EAAO,GAAG,EAAE,QAAA,4IAAS,UAAG,EAAE,KAAA,CAAM,GAAG,EAAE;AAC9C;AAEA,SAAS,sBAAsB,MAAA,EAAwF;IACrH,IAAI,+KAAC,gBAAA,EAAe;QAClB,OAAO,KAAA;IACT;IAEA,MAAM,oBAAoB,qBAAqB;IAC/C,IAAI;IAEJ,IAAI;QACF,IAAI,oCAAmB;YACrB,UAAU,KAAK,KAAA,CAAM,OAAO,iBAAiB,KAAK,IAAI;QACxD;IACF,EAAA,OAAQ;QACN,UAAU,KAAA;IACZ;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/headers-utils.ts"],"sourcesContent":["import { constants } from '@clerk/backend/internal';\nimport type { NextRequest } from 'next/server';\n\nimport type { RequestLike } from './types';\n\nexport function getCustomAttributeFromRequest(req: RequestLike, key: string): string | null | undefined {\n  // @ts-expect-error - TS doesn't like indexing into RequestLike\n  return key in req ? req[key] : undefined;\n}\n\nexport function getAuthKeyFromRequest(\n  req: RequestLike,\n  key: keyof typeof constants.Attributes,\n): string | null | undefined {\n  return getCustomAttributeFromRequest(req, constants.Attributes[key]) || getHeader(req, constants.Headers[key]);\n}\n\nexport function getHeader(req: RequestLike, name: string): string | null | undefined {\n  if (isNextRequest(req) || isRequestWebAPI(req)) {\n    return req.headers.get(name);\n  }\n\n  // If no header has been determined for IncomingMessage case, check if available within private `socket` headers\n  // When deployed to vercel, req.headers for API routes is a `IncomingHttpHeaders` key-val object which does not follow\n  // the Headers spec so the name is no longer case-insensitive.\n  return req.headers[name] || req.headers[name.toLowerCase()] || (req.socket as any)?._httpMessage?.getHeader(name);\n}\n\nexport function detectClerkMiddleware(req: RequestLike): boolean {\n  return Boolean(getAuthKeyFromRequest(req, 'AuthStatus'));\n}\n\nexport function isNextRequest(val: unknown): val is NextRequest {\n  try {\n    const { headers, nextUrl, cookies } = (val || {}) as NextRequest;\n    return (\n      typeof headers?.get === 'function' &&\n      typeof nextUrl?.searchParams.get === 'function' &&\n      typeof cookies?.get === 'function'\n    );\n  } catch {\n    return false;\n  }\n}\n\nexport function isRequestWebAPI(val: unknown): val is Request {\n  try {\n    const { headers } = (val || {}) as Request;\n    return typeof headers?.get === 'function';\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA,SAAS,iBAAiB;;;AAKnB,SAAS,8BAA8B,GAAA,EAAkB,GAAA,EAAwC;IAEtG,OAAO,OAAO,MAAM,GAAA,CAAI,GAAG,CAAA,GAAI,KAAA;AACjC;AAEO,SAAS,sBACd,GAAA,EACA,GAAA,EAC2B;IAC3B,OAAO,8BAA8B,sLAAK,YAAA,CAAU,UAAA,CAAW,GAAG,CAAC,KAAK,UAAU,sLAAK,YAAA,CAAU,OAAA,CAAQ,GAAG,CAAC;AAC/G;AAEO,SAAS,UAAU,GAAA,EAAkB,IAAA,EAAyC;IAjBrF,IAAA,IAAA;IAkBE,IAAI,cAAc,GAAG,KAAK,gBAAgB,GAAG,GAAG;QAC9C,OAAO,IAAI,OAAA,CAAQ,GAAA,CAAI,IAAI;IAC7B;IAKA,OAAO,IAAI,OAAA,CAAQ,IAAI,CAAA,IAAK,IAAI,OAAA,CAAQ,KAAK,WAAA,CAAY,CAAC,CAAA,IAAA,CAAA,CAAM,KAAA,CAAA,KAAA,IAAI,MAAA,KAAJ,OAAA,KAAA,IAAA,GAAoB,YAAA,KAApB,OAAA,KAAA,IAAA,GAAkC,SAAA,CAAU,KAAA;AAC9G;AAEO,SAAS,sBAAsB,GAAA,EAA2B;IAC/D,OAAO,QAAQ,sBAAsB,KAAK,YAAY,CAAC;AACzD;AAEO,SAAS,cAAc,GAAA,EAAkC;IAC9D,IAAI;QACF,MAAM,EAAE,OAAA,EAAS,OAAA,EAAS,OAAA,CAAQ,CAAA,GAAK,OAAO,CAAC;QAC/C,OACE,OAAA,CAAO,WAAA,OAAA,KAAA,IAAA,QAAS,GAAA,MAAQ,cACxB,OAAA,CAAO,WAAA,OAAA,KAAA,IAAA,QAAS,YAAA,CAAa,GAAA,MAAQ,cACrC,OAAA,CAAO,WAAA,OAAA,KAAA,IAAA,QAAS,GAAA,MAAQ;IAE5B,EAAA,OAAQ;QACN,OAAO;IACT;AACF;AAEO,SAAS,gBAAgB,GAAA,EAA8B;IAC5D,IAAI;QACF,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAK,OAAO,CAAC;QAC7B,OAAO,OAAA,CAAO,WAAA,OAAA,KAAA,IAAA,QAAS,GAAA,MAAQ;IACjC,EAAA,OAAQ;QACN,OAAO;IACT;AACF","ignoreList":[0]}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/errorThrower.ts"],"sourcesContent":["import { buildErrorThrower } from '@clerk/shared/error';\n\nexport const errorThrower = buildErrorThrower({ packageName: '@clerk/nextjs' });\n"],"names":[],"mappings":";;;;AAAA,SAAS,yBAAyB;;;AAE3B,MAAM,mLAAe,oBAAA,EAAkB;IAAE,aAAa;AAAgB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/dist/esm/app-router/keyless-actions.js"],"sourcesContent":["\"use server\";\nimport { cookies, headers } from \"next/headers\";\nimport { redirect, RedirectType } from \"next/navigation\";\nimport { errorThrower } from \"../server/errorThrower\";\nimport { detectClerkMiddleware } from \"../server/headers-utils\";\nimport { getKeylessCookieName, getKeylessCookieValue } from \"../server/keyless\";\nimport { canUseKeyless } from \"../utils/feature-flags\";\nasync function syncKeylessConfigAction(args) {\n  const { claimUrl, publishableKey, secretKey, returnUrl } = args;\n  const cookieStore = await cookies();\n  const request = new Request(\"https://placeholder.com\", { headers: await headers() });\n  const keyless = getKeylessCookieValue((name) => {\n    var _a;\n    return (_a = cookieStore.get(name)) == null ? void 0 : _a.value;\n  });\n  const pksMatch = (keyless == null ? void 0 : keyless.publishableKey) === publishableKey;\n  const sksMatch = (keyless == null ? void 0 : keyless.secretKey) === secretKey;\n  if (pksMatch && sksMatch) {\n    return;\n  }\n  cookieStore.set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: true,\n    httpOnly: true\n  });\n  if (detectClerkMiddleware(request)) {\n    redirect(`/clerk-sync-keyless?returnUrl=${returnUrl}`, RedirectType.replace);\n    return;\n  }\n  return;\n}\nasync function createOrReadKeylessAction() {\n  if (!canUseKeyless) {\n    return null;\n  }\n  const result = await import(\"../server/keyless-node.js\").then((m) => m.createOrReadKeyless()).catch(() => null);\n  if (!result) {\n    errorThrower.throwMissingPublishableKeyError();\n    return null;\n  }\n  const { clerkDevelopmentCache, createKeylessModeMessage } = await import(\"../server/keyless-log-cache.js\");\n  clerkDevelopmentCache == null ? void 0 : clerkDevelopmentCache.log({\n    cacheKey: result.publishableKey,\n    msg: createKeylessModeMessage(result)\n  });\n  const { claimUrl, publishableKey, secretKey, apiKeysUrl } = result;\n  void (await cookies()).set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {\n    secure: false,\n    httpOnly: false\n  });\n  return {\n    claimUrl,\n    publishableKey,\n    apiKeysUrl\n  };\n}\nasync function deleteKeylessAction() {\n  if (!canUseKeyless) {\n    return;\n  }\n  await import(\"../server/keyless-node.js\").then((m) => m.removeKeyless()).catch(() => {\n  });\n  return;\n}\nexport {\n  createOrReadKeylessAction,\n  deleteKeylessAction,\n  syncKeylessConfigAction\n};\n"],"names":[],"mappings":";;;;;;;AACA;AACA;;AAGA;AADA;AAFA;AAIA;AAHA;;;;;;;;;AAIA,eAAe,wBAAwB,IAAI;IACzC,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG;IAC3D,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,UAAU,IAAI,QAAQ,2BAA2B;QAAE,SAAS,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAAI;IAClF,MAAM,UAAU,CAAA,GAAA,qKAAA,CAAA,wBAAqB,AAAD,EAAE,CAAC;QACrC,IAAI;QACJ,OAAO,CAAC,KAAK,YAAY,GAAG,CAAC,KAAK,KAAK,OAAO,KAAK,IAAI,GAAG,KAAK;IACjE;IACA,MAAM,WAAW,CAAC,WAAW,OAAO,KAAK,IAAI,QAAQ,cAAc,MAAM;IACzE,MAAM,WAAW,CAAC,WAAW,OAAO,KAAK,IAAI,QAAQ,SAAS,MAAM;IACpE,IAAI,YAAY,UAAU;QACxB;IACF;IACA,YAAY,GAAG,CAAC,CAAA,GAAA,qKAAA,CAAA,uBAAoB,AAAD,KAAK,KAAK,SAAS,CAAC;QAAE;QAAU;QAAgB;IAAU,IAAI;QAC/F,QAAQ;QACR,UAAU;IACZ;IACA,IAAI,CAAA,GAAA,8KAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU;QAClC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,8BAA8B,EAAE,WAAW,EAAE,qLAAA,CAAA,eAAY,CAAC,OAAO;QAC3E;IACF;IACA;AACF;AACA,eAAe;IACb,IAAI,CAAC,6KAAA,CAAA,gBAAa,EAAE;QAClB,OAAO;IACT;IACA,MAAM,SAAS,MAAM,yJAAoC,IAAI,CAAC,CAAC,IAAM,EAAE,mBAAmB,IAAI,KAAK,CAAC,IAAM;IAC1G,IAAI,CAAC,QAAQ;QACX,0KAAA,CAAA,eAAY,CAAC,+BAA+B;QAC5C,OAAO;IACT;IACA,MAAM,EAAE,qBAAqB,EAAE,wBAAwB,EAAE,GAAG;IAC5D,yBAAyB,OAAO,KAAK,IAAI,sBAAsB,GAAG,CAAC;QACjE,UAAU,OAAO,cAAc;QAC/B,KAAK,yBAAyB;IAChC;IACA,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG;IAC5D,KAAK,CAAC,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,GAAG,EAAE,GAAG,CAAC,CAAA,GAAA,qKAAA,CAAA,uBAAoB,AAAD,KAAK,KAAK,SAAS,CAAC;QAAE;QAAU;QAAgB;IAAU,IAAI;QAC1G,QAAQ;QACR,UAAU;IACZ;IACA,OAAO;QACL;QACA;QACA;IACF;AACF;AACA,eAAe;IACb,IAAI,CAAC,6KAAA,CAAA,gBAAa,EAAE;QAClB;IACF;IACA,MAAM,yJAAoC,IAAI,CAAC,CAAC,IAAM,EAAE,aAAa,IAAI,KAAK,CAAC,KAC/E;IACA;AACF;;;;IAEE,uCAAuB,GAAvB;IACA,uCAAiB,GAAjB;IACA,uCAAqB,GAArB;;AAFA,+OAAA;AACA,+OAAA;AACA,+OAAA","ignoreList":[0]}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/app-router/server/utils.ts"],"sourcesContent":["import { NextRequest } from 'next/server';\n\nexport const isPrerenderingBailout = (e: unknown) => {\n  if (!(e instanceof Error) || !('message' in e)) {\n    return false;\n  }\n\n  const { message } = e;\n\n  const lowerCaseInput = message.toLowerCase();\n  const dynamicServerUsage = lowerCaseInput.includes('dynamic server usage');\n  const bailOutPrerendering = lowerCaseInput.includes('this page needs to bail out of prerendering');\n\n  // note: new error message syntax introduced in next@14.1.1-canary.21\n  // but we still want to support older versions.\n  // https://github.com/vercel/next.js/pull/61332 (dynamic-rendering.ts:153)\n  const routeRegex = /Route .*? needs to bail out of prerendering at this point because it used .*?./;\n\n  return routeRegex.test(message) || dynamicServerUsage || bailOutPrerendering;\n};\n\nexport async function buildRequestLike(): Promise<NextRequest> {\n  try {\n    // Dynamically import next/headers, otherwise Next12 apps will break\n    // @ts-expect-error: Cannot find module 'next/headers' or its corresponding type declarations.ts(2307)\n    const { headers } = await import('next/headers');\n    const resolvedHeaders = await headers();\n    return new NextRequest('https://placeholder.com', { headers: resolvedHeaders });\n  } catch (e: any) {\n    // rethrow the error when react throws a prerendering bailout\n    // https://nextjs.org/docs/messages/ppr-caught-error\n    if (e && isPrerenderingBailout(e)) {\n      throw e;\n    }\n\n    throw new Error(\n      `Clerk: auth(), currentUser() and clerkClient(), are only supported in App Router (/app directory).\\nIf you're using /pages, try getAuth() instead.\\nOriginal error: ${e}`,\n    );\n  }\n}\n\n// Original source: https://github.com/vercel/next.js/blob/canary/packages/next/src/server/app-render/get-script-nonce-from-header.tsx\nexport function getScriptNonceFromHeader(cspHeaderValue: string): string | undefined {\n  const directives = cspHeaderValue\n    // Directives are split by ';'.\n    .split(';')\n    .map(directive => directive.trim());\n\n  // First try to find the directive for the 'script-src', otherwise try to\n  // fallback to the 'default-src'.\n  const directive =\n    directives.find(dir => dir.startsWith('script-src')) || directives.find(dir => dir.startsWith('default-src'));\n\n  // If no directive could be found, then we're done.\n  if (!directive) {\n    return;\n  }\n\n  // Extract the nonce from the directive\n  const nonce = directive\n    .split(' ')\n    // Remove the 'strict-src'/'default-src' string, this can't be the nonce.\n    .slice(1)\n    .map(source => source.trim())\n    // Find the first source with the 'nonce-' prefix.\n    .find(source => source.startsWith(\"'nonce-\") && source.length > 8 && source.endsWith(\"'\"))\n    // Grab the nonce by trimming the 'nonce-' prefix.\n    ?.slice(7, -1);\n\n  // If we couldn't find the nonce, then we're done.\n  if (!nonce) {\n    return;\n  }\n\n  // Don't accept the nonce value if it contains HTML escape characters.\n  // Technically, the spec requires a base64'd value, but this is just an\n  // extra layer.\n  if (/[&><\\u2028\\u2029]/g.test(nonce)) {\n    throw new Error(\n      'Nonce value from Content-Security-Policy contained invalid HTML escape characters, which is disallowed for security reasons. Make sure that your nonce value does not contain the following characters: `<`, `>`, `&`',\n    );\n  }\n\n  return nonce;\n}\n"],"names":["directive"],"mappings":";;;;;AAAA,SAAS,mBAAmB;;;AAErB,MAAM,wBAAwB,CAAC,MAAe;IACnD,IAAI,CAAA,CAAE,aAAa,KAAA,KAAU,CAAA,CAAE,aAAa,CAAA,GAAI;QAC9C,OAAO;IACT;IAEA,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI;IAEpB,MAAM,iBAAiB,QAAQ,WAAA,CAAY;IAC3C,MAAM,qBAAqB,eAAe,QAAA,CAAS,sBAAsB;IACzE,MAAM,sBAAsB,eAAe,QAAA,CAAS,6CAA6C;IAKjG,MAAM,aAAa;IAEnB,OAAO,WAAW,IAAA,CAAK,OAAO,KAAK,sBAAsB;AAC3D;AAEA,eAAsB,mBAAyC;IAC7D,IAAI;QAGF,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI,MAAM,OAAO,cAAc;QAC/C,MAAM,kBAAkB,MAAM,QAAQ;QACtC,OAAO,mIAAI,cAAA,CAAY,2BAA2B;YAAE,SAAS;QAAgB,CAAC;IAChF,EAAA,OAAS,GAAQ;QAGf,IAAI,KAAK,sBAAsB,CAAC,GAAG;YACjC,MAAM;QACR;QAEA,MAAM,IAAI,MACR,CAAA;;gBAAA,EAAuK,CAAC,EAAA;IAE5K;AACF;AAGO,SAAS,yBAAyB,cAAA,EAA4C;IA1CrF,IAAA;IA2CE,MAAM,aAAa,eAEhB,KAAA,CAAM,GAAG,EACT,GAAA,CAAI,CAAAA,aAAaA,WAAU,IAAA,CAAK,CAAC;IAIpC,MAAM,YACJ,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW,YAAY,CAAC,KAAK,WAAW,IAAA,CAAK,CAAA,MAAO,IAAI,UAAA,CAAW,aAAa,CAAC;IAG9G,IAAI,CAAC,WAAW;QACd;IACF;IAGA,MAAM,QAAA,CAAQ,KAAA,UACX,KAAA,CAAM,GAAG,EAET,KAAA,CAAM,CAAC,EACP,GAAA,CAAI,CAAA,SAAU,OAAO,IAAA,CAAK,CAAC,EAE3B,IAAA,CAAK,CAAA,SAAU,OAAO,UAAA,CAAW,SAAS,KAAK,OAAO,MAAA,GAAS,KAAK,OAAO,QAAA,CAAS,GAAG,CAAC,CAAA,KAN7E,OAAA,KAAA,IAAA,GAQV,KAAA,CAAM,GAAG,CAAA;IAGb,IAAI,CAAC,OAAO;QACV;IACF;IAKA,IAAI,qBAAqB,IAAA,CAAK,KAAK,GAAG;QACpC,MAAM,IAAI,MACR;IAEJ;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/utils/logFormatter.ts"],"sourcesContent":["import type { LogEntry } from './debugLogger';\n\n// Move to shared once clerk/shared is used in clerk/nextjs\nconst maskSecretKey = (str: any) => {\n  if (!str || typeof str !== 'string') {\n    return str;\n  }\n\n  try {\n    return (str || '').replace(/^(sk_(live|test)_)(.+?)(.{3})$/, '$1*********$4');\n  } catch {\n    return '';\n  }\n};\n\nexport const logFormatter = (entry: LogEntry) => {\n  return (Array.isArray(entry) ? entry : [entry])\n    .map(entry => {\n      if (typeof entry === 'string') {\n        return maskSecretKey(entry);\n      }\n\n      const masked = Object.fromEntries(Object.entries(entry).map(([k, v]) => [k, maskSecretKey(v)]));\n      return JSON.stringify(masked, null, 2);\n    })\n    .join(', ');\n};\n"],"names":["entry"],"mappings":";;;;AAGA,MAAM,gBAAgB,CAAC,QAAa;IAClC,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;QACnC,OAAO;IACT;IAEA,IAAI;QACF,OAAA,CAAQ,OAAO,EAAA,EAAI,OAAA,CAAQ,kCAAkC,eAAe;IAC9E,EAAA,OAAQ;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,CAAC,UAAoB;IAC/C,OAAA,CAAQ,MAAM,OAAA,CAAQ,KAAK,IAAI,QAAQ;QAAC,KAAK;KAAA,EAC1C,GAAA,CAAI,CAAAA,WAAS;QACZ,IAAI,OAAOA,WAAU,UAAU;YAC7B,OAAO,cAAcA,MAAK;QAC5B;QAEA,MAAM,SAAS,OAAO,WAAA,CAAY,OAAO,OAAA,CAAQA,MAAK,EAAE,GAAA,CAAI,CAAC,CAAC,GAAG,CAAC,CAAA,GAAM;gBAAC;gBAAG,cAAc,CAAC,CAAC;aAAC,CAAC;QAC9F,OAAO,KAAK,SAAA,CAAU,QAAQ,MAAM,CAAC;IACvC,CAAC,EACA,IAAA,CAAK,IAAI;AACd","ignoreList":[0]}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/utils/debugLogger.ts"],"sourcesContent":["// TODO: Replace with a more sophisticated logging solution\n\nimport nextPkg from 'next/package.json';\n\nimport { logFormatter } from './logFormatter';\n\nexport type Log = string | Record<string, unknown>;\nexport type LogEntry = Log | Log[];\nexport type Logger<L = Log> = {\n  commit: () => void;\n  debug: (...args: Array<L | (() => L)>) => void;\n  enable: () => void;\n};\nexport type LoggerNoCommit<L = Logger> = Omit<L, 'commit'>;\n\nexport const createDebugLogger = (name: string, formatter: (val: LogEntry) => string) => (): Logger => {\n  const entries: LogEntry[] = [];\n  let isEnabled = false;\n\n  return {\n    enable: () => {\n      isEnabled = true;\n    },\n    debug: (...args) => {\n      if (isEnabled) {\n        entries.push(args.map(arg => (typeof arg === 'function' ? arg() : arg)));\n      }\n    },\n    commit: () => {\n      if (isEnabled) {\n        console.log(debugLogHeader(name));\n\n        /**\n         * We buffer each collected log entry so we can format them and log them all at once.\n         * Individual console.log calls are used to ensure we don't hit platform-specific log limits (Vercel and Netlify are 4kb).\n         */\n        for (const log of entries) {\n          let output = formatter(log);\n\n          output = output\n            .split('\\n')\n            .map(l => `  ${l}`)\n            .join('\\n');\n\n          // Vercel errors if the output is > 4kb, so we truncate it\n          if (process.env.VERCEL) {\n            output = truncate(output, 4096);\n          }\n\n          console.log(output);\n        }\n\n        console.log(debugLogFooter(name));\n      }\n    },\n  };\n};\n\ntype WithLogger = <L extends Logger, H extends (...args: any[]) => any>(\n  loggerFactoryOrName: string | (() => L),\n  handlerCtor: (logger: LoggerNoCommit<L>) => H,\n) => H;\n\nexport const withLogger: WithLogger = (loggerFactoryOrName, handlerCtor) => {\n  return ((...args: any) => {\n    const factory =\n      typeof loggerFactoryOrName === 'string'\n        ? createDebugLogger(loggerFactoryOrName, logFormatter)\n        : loggerFactoryOrName;\n\n    const logger = factory();\n    const handler = handlerCtor(logger as any);\n\n    try {\n      const res = handler(...args);\n      if (typeof res === 'object' && 'then' in res && typeof res.then === 'function') {\n        return res\n          .then((val: any) => {\n            logger.commit();\n            return val;\n          })\n          .catch((err: any) => {\n            logger.commit();\n            throw err;\n          });\n      }\n      // handle sync methods\n      logger.commit();\n      return res;\n    } catch (err: any) {\n      logger.commit();\n      throw err;\n    }\n  }) as ReturnType<typeof handlerCtor>;\n};\n\nfunction debugLogHeader(name: string) {\n  return `[clerk debug start: ${name}]`;\n}\n\nfunction debugLogFooter(name: string) {\n  return `[clerk debug end: ${name}] (@clerk/nextjs=${PACKAGE_VERSION},next=${nextPkg.version},timestamp=${Math.round(new Date().getTime() / 1_000)})`;\n}\n\n// ref: https://stackoverflow.com/questions/57769465/javascript-truncate-text-by-bytes-length\nfunction truncate(str: string, maxLength: number) {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder('utf-8');\n\n  const encodedString = encoder.encode(str);\n  const truncatedString = encodedString.slice(0, maxLength);\n\n  // return the truncated string, removing any replacement characters that result from partially truncated characters\n  return decoder.decode(truncatedString).replace(/\\uFFFD/g, '');\n}\n"],"names":[],"mappings":";;;;AAEA,OAAO,aAAa;AAEpB,SAAS,oBAAoB;;;;AAWtB,MAAM,oBAAoB,CAAC,MAAc,YAAyC,MAAc;QACrG,MAAM,UAAsB,CAAC,CAAA;QAC7B,IAAI,YAAY;QAEhB,OAAO;YACL,QAAQ,MAAM;gBACZ,YAAY;YACd;YACA,OAAO,CAAA,GAAI,SAAS;gBAClB,IAAI,WAAW;oBACb,QAAQ,IAAA,CAAK,KAAK,GAAA,CAAI,CAAA,MAAQ,OAAO,QAAQ,aAAa,IAAI,IAAI,GAAI,CAAC;gBACzE;YACF;YACA,QAAQ,MAAM;gBACZ,IAAI,WAAW;oBACb,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;oBAMhC,KAAA,MAAW,OAAO,QAAS;wBACzB,IAAI,SAAS,UAAU,GAAG;wBAE1B,SAAS,OACN,KAAA,CAAM,IAAI,EACV,GAAA,CAAI,CAAA,IAAK,CAAA,EAAA,EAAK,CAAC,EAAE,EACjB,IAAA,CAAK,IAAI;wBAGZ,IAAI,QAAQ,GAAA,CAAI,MAAA,EAAQ;4BACtB,SAAS,SAAS,QAAQ,IAAI;wBAChC;wBAEA,QAAQ,GAAA,CAAI,MAAM;oBACpB;oBAEA,QAAQ,GAAA,CAAI,eAAe,IAAI,CAAC;gBAClC;YACF;QACF;IACF;AAOO,MAAM,aAAyB,CAAC,qBAAqB,gBAAgB;IAC1E,OAAQ,CAAA,GAAI,SAAc;QACxB,MAAM,UACJ,OAAO,wBAAwB,WAC3B,kBAAkB,+LAAqB,eAAY,IACnD;QAEN,MAAM,SAAS,QAAQ;QACvB,MAAM,UAAU,YAAY,MAAa;QAEzC,IAAI;YACF,MAAM,MAAM,QAAQ,GAAG,IAAI;YAC3B,IAAI,OAAO,QAAQ,YAAY,UAAU,OAAO,OAAO,IAAI,IAAA,KAAS,YAAY;gBAC9E,OAAO,IACJ,IAAA,CAAK,CAAC,QAAa;oBAClB,OAAO,MAAA,CAAO;oBACd,OAAO;gBACT,CAAC,EACA,KAAA,CAAM,CAAC,QAAa;oBACnB,OAAO,MAAA,CAAO;oBACd,MAAM;gBACR,CAAC;YACL;YAEA,OAAO,MAAA,CAAO;YACd,OAAO;QACT,EAAA,OAAS,KAAU;YACjB,OAAO,MAAA,CAAO;YACd,MAAM;QACR;IACF;AACF;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,oBAAA,EAAuB,IAAI,CAAA,CAAA,CAAA;AACpC;AAEA,SAAS,eAAe,IAAA,EAAc;IACpC,OAAO,CAAA,kBAAA,EAAqB,IAAI,CAAA,iBAAA,EAAoB,QAAe,CAAA,MAAA,0GAAS,UAAA,CAAQ,OAAO,CAAA,WAAA,EAAc,KAAK,KAAA,CAAA,AAAM,aAAA,GAAA,IAAI,KAAK,EAAE,OAAA,CAAQ,IAAI,GAAK,CAAC,CAAA,CAAA,CAAA;AACnJ;AAGA,SAAS,SAAS,GAAA,EAAa,SAAA,EAAmB;IAChD,MAAM,UAAU,IAAI,YAAY;IAChC,MAAM,UAAU,IAAI,YAAY,OAAO;IAEvC,MAAM,gBAAgB,QAAQ,MAAA,CAAO,GAAG;IACxC,MAAM,kBAAkB,cAAc,KAAA,CAAM,GAAG,SAAS;IAGxD,OAAO,QAAQ,MAAA,CAAO,eAAe,EAAE,OAAA,CAAQ,WAAW,EAAE;AAC9D","ignoreList":[0]}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/constants.ts"],"sourcesContent":["const Headers = {\n  NextRewrite: 'x-middleware-rewrite',\n  NextResume: 'x-middleware-next',\n  NextRedirect: 'Location',\n  // Used by next to identify internal navigation for app router\n  NextUrl: 'next-url',\n  NextAction: 'next-action',\n  // Used by next to identify internal navigation for pages router\n  NextjsData: 'x-nextjs-data',\n} as const;\n\nexport const constants = {\n  Headers,\n} as const;\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU;IACd,aAAa;IACb,YAAY;IACZ,cAAc;IAAA,8DAAA;IAEd,SAAS;IACT,YAAY;IAAA,gEAAA;IAEZ,YAAY;AACd;AAEO,MAAM,YAAY;IACvB;AACF","ignoreList":[0]}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/errors.ts"],"sourcesContent":["export const missingDomainAndProxy = `\nMissing domain and proxyUrl. A satellite application needs to specify a domain or a proxyUrl.\n\n1) With middleware\n   e.g. export default clerkMiddleware({domain:'YOUR_DOMAIN',isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_DOMAIN='YOUR_DOMAIN'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'\n   `;\n\nexport const missingSignInUrlInDev = `\nInvalid signInUrl. A satellite application requires a signInUrl for development instances.\nCheck if signInUrl is missing from your configuration or if it is not an absolute URL\n\n1) With middleware\n   e.g. export default clerkMiddleware({signInUrl:'SOME_URL', isSatellite:true});\n2) With environment variables e.g.\n   NEXT_PUBLIC_CLERK_SIGN_IN_URL='SOME_URL'\n   NEXT_PUBLIC_CLERK_IS_SATELLITE='true'`;\n\nexport const getAuthAuthHeaderMissing = () => authAuthHeaderMissing('getAuth');\n\nexport const authAuthHeaderMissing = (helperName = 'auth', prefixSteps?: string[]) =>\n  `Clerk: ${helperName}() was called but Clerk can't detect usage of clerkMiddleware(). Please ensure the following:\n- ${prefixSteps ? [...prefixSteps, ''].join('\\n- ') : ' '}clerkMiddleware() is used in your Next.js Middleware.\n- Your Middleware matcher is configured to match this route or page.\n- If you are using the src directory, make sure the Middleware file is inside of it.\n\nFor more details, see https://clerk.com/docs/quickstarts/nextjs\n`;\n\nexport const authSignatureInvalid = `Clerk: Unable to verify request, this usually means the Clerk middleware did not run. Ensure Clerk's middleware is properly integrated and matches the current route. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware. (code=auth_signature_invalid)`;\n\nexport const encryptionKeyInvalid = `Clerk: Unable to decrypt request data, this usually means the encryption key is invalid. Ensure the encryption key is properly set. For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\n\nexport const encryptionKeyInvalidDev = `Clerk: Unable to decrypt request data.\\n\\nRefresh the page if your .env file was just updated. If the issue persists, ensure the encryption key is valid and properly set.\\n\\nFor more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys. (code=encryption_key_invalid)`;\n"],"names":[],"mappings":";;;;;;;;;;AAAO,MAAM,wBAAwB,CAAA;;;;;;;;GAAA,CAAA;AAU9B,MAAM,wBAAwB,CAAA;;;;;;;;wCAAA,CAAA;AAU9B,MAAM,2BAA2B,IAAM,sBAAsB,SAAS;AAEtE,MAAM,wBAAwB,CAAC,aAAa,MAAA,EAAQ,cACzD,CAAA,OAAA,EAAU,UAAU,CAAA;EAAA,EAClB,cAAc,CAAC;WAAG;QAAa,EAAE;KAAA,CAAE,IAAA,CAAK,MAAM,IAAI,GAAG,CAAA;;;;;AAAA,CAAA;AAOlD,MAAM,uBAAuB,CAAA,yRAAA,CAAA;AAE7B,MAAM,uBAAuB,CAAA,oQAAA,CAAA;AAE7B,MAAM,0BAA0B,CAAA;;;;gIAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 600, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/utils.ts"],"sourcesContent":["import type { AuthenticateRequestOptions, ClerkRequest, RequestState } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport { isDevelopmentFromSecretKey } from '@clerk/shared/keys';\nimport { logger } from '@clerk/shared/logger';\nimport { isHttpOrHttps } from '@clerk/shared/proxy';\nimport { handleValueOrFn, isProductionEnvironment } from '@clerk/shared/utils';\nimport AES from 'crypto-js/aes';\nimport encUtf8 from 'crypto-js/enc-utf8';\nimport hmacSHA1 from 'crypto-js/hmac-sha1';\nimport { NextResponse } from 'next/server';\n\nimport { constants as nextConstants } from '../constants';\nimport { canUseKeyless } from '../utils/feature-flags';\nimport { DOMAIN, ENCRYPTION_KEY, IS_SATELLITE, PROXY_URL, SECRET_KEY, SIGN_IN_URL } from './constants';\nimport {\n  authSignatureInvalid,\n  encryptionKeyInvalid,\n  encryptionKeyInvalidDev,\n  missingDomainAndProxy,\n  missingSignInUrlInDev,\n} from './errors';\nimport { errorThrower } from './errorThrower';\nimport { detectClerkMiddleware } from './headers-utils';\nimport type { RequestLike } from './types';\n\nconst OVERRIDE_HEADERS = 'x-middleware-override-headers';\nconst MIDDLEWARE_HEADER_PREFIX = 'x-middleware-request' as string;\n\nexport const setRequestHeadersOnNextResponse = (\n  res: NextResponse | Response,\n  req: Request,\n  newHeaders: Record<string, string>,\n) => {\n  if (!res.headers.get(OVERRIDE_HEADERS)) {\n    // Emulate a user setting overrides by explicitly adding the required nextjs headers\n    // https://github.com/vercel/next.js/pull/41380\n    // @ts-expect-error\n    res.headers.set(OVERRIDE_HEADERS, [...req.headers.keys()]);\n    req.headers.forEach((val, key) => {\n      res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n    });\n  }\n\n  // Now that we have normalised res to include overrides, just append the new header\n  Object.entries(newHeaders).forEach(([key, val]) => {\n    res.headers.set(OVERRIDE_HEADERS, `${res.headers.get(OVERRIDE_HEADERS)},${key}`);\n    res.headers.set(`${MIDDLEWARE_HEADER_PREFIX}-${key}`, val);\n  });\n};\n\n// Auth result will be set as both a query param & header when applicable\nexport function decorateRequest(\n  req: ClerkRequest,\n  res: Response,\n  requestState: RequestState,\n  requestData: AuthenticateRequestOptions,\n  keylessMode: Pick<AuthenticateRequestOptions, 'publishableKey' | 'secretKey'>,\n): Response {\n  const { reason, message, status, token } = requestState;\n  // pass-through case, convert to next()\n  if (!res) {\n    res = NextResponse.next();\n  }\n\n  // redirect() case, return early\n  if (res.headers.get(nextConstants.Headers.NextRedirect)) {\n    return res;\n  }\n\n  let rewriteURL;\n\n  // next() case, convert to a rewrite\n  if (res.headers.get(nextConstants.Headers.NextResume) === '1') {\n    res.headers.delete(nextConstants.Headers.NextResume);\n    rewriteURL = new URL(req.url);\n  }\n\n  // rewrite() case, set auth result only if origin remains the same\n  const rewriteURLHeader = res.headers.get(nextConstants.Headers.NextRewrite);\n\n  if (rewriteURLHeader) {\n    const reqURL = new URL(req.url);\n    rewriteURL = new URL(rewriteURLHeader);\n\n    // if the origin has changed, return early\n    if (rewriteURL.origin !== reqURL.origin) {\n      return res;\n    }\n  }\n\n  if (rewriteURL) {\n    const clerkRequestData = encryptClerkRequestData(requestData, keylessMode);\n\n    setRequestHeadersOnNextResponse(res, req, {\n      [constants.Headers.AuthStatus]: status,\n      [constants.Headers.AuthToken]: token || '',\n      [constants.Headers.AuthSignature]: token\n        ? createTokenSignature(token, requestData?.secretKey || SECRET_KEY || keylessMode.secretKey || '')\n        : '',\n      [constants.Headers.AuthMessage]: message || '',\n      [constants.Headers.AuthReason]: reason || '',\n      [constants.Headers.ClerkUrl]: req.clerkUrl.toString(),\n      ...(clerkRequestData ? { [constants.Headers.ClerkRequestData]: clerkRequestData } : {}),\n    });\n    res.headers.set(nextConstants.Headers.NextRewrite, rewriteURL.href);\n  }\n\n  return res;\n}\n\nexport const handleMultiDomainAndProxy = (clerkRequest: ClerkRequest, opts: AuthenticateRequestOptions) => {\n  const relativeOrAbsoluteProxyUrl = handleValueOrFn(opts?.proxyUrl, clerkRequest.clerkUrl, PROXY_URL);\n\n  let proxyUrl;\n  if (!!relativeOrAbsoluteProxyUrl && !isHttpOrHttps(relativeOrAbsoluteProxyUrl)) {\n    proxyUrl = new URL(relativeOrAbsoluteProxyUrl, clerkRequest.clerkUrl).toString();\n  } else {\n    proxyUrl = relativeOrAbsoluteProxyUrl;\n  }\n\n  const isSatellite = handleValueOrFn(opts.isSatellite, new URL(clerkRequest.url), IS_SATELLITE);\n  const domain = handleValueOrFn(opts.domain, new URL(clerkRequest.url), DOMAIN);\n  const signInUrl = opts?.signInUrl || SIGN_IN_URL;\n\n  if (isSatellite && !proxyUrl && !domain) {\n    throw new Error(missingDomainAndProxy);\n  }\n\n  if (isSatellite && !isHttpOrHttps(signInUrl) && isDevelopmentFromSecretKey(opts.secretKey || SECRET_KEY)) {\n    throw new Error(missingSignInUrlInDev);\n  }\n\n  return {\n    proxyUrl,\n    isSatellite,\n    domain,\n    signInUrl,\n  };\n};\n\nexport const redirectAdapter = (url: string | URL) => {\n  return NextResponse.redirect(url, { headers: { [constants.Headers.ClerkRedirectTo]: 'true' } });\n};\n\nexport function assertAuthStatus(req: RequestLike, error: string) {\n  if (!detectClerkMiddleware(req)) {\n    throw new Error(error);\n  }\n}\n\nexport function assertKey(key: string | undefined, onError: () => never): string {\n  if (!key) {\n    onError();\n  }\n\n  return key;\n}\n\n/**\n * Compute a cryptographic signature from a session token and provided secret key. Used to validate that the token has not been modified when transferring between middleware and the Next.js origin.\n */\nfunction createTokenSignature(token: string, key: string): string {\n  return hmacSHA1(token, key).toString();\n}\n\n/**\n * Assert that the provided token generates a matching signature.\n */\nexport function assertTokenSignature(token: string, key: string, signature?: string | null) {\n  if (!signature) {\n    throw new Error(authSignatureInvalid);\n  }\n\n  const expectedSignature = createTokenSignature(token, key);\n  if (expectedSignature !== signature) {\n    throw new Error(authSignatureInvalid);\n  }\n}\n\nconst KEYLESS_ENCRYPTION_KEY = 'clerk_keyless_dummy_key';\n\n/**\n * Encrypt request data propagated between server requests.\n * @internal\n **/\nexport function encryptClerkRequestData(\n  requestData: Partial<AuthenticateRequestOptions>,\n  keylessModeKeys: Pick<AuthenticateRequestOptions, 'publishableKey' | 'secretKey'>,\n) {\n  const isEmpty = (obj: Record<string, any> | undefined) => {\n    if (!obj) {\n      return true;\n    }\n    return !Object.values(obj).some(v => v !== undefined);\n  };\n\n  if (isEmpty(requestData) && isEmpty(keylessModeKeys)) {\n    return;\n  }\n\n  if (requestData.secretKey && !ENCRYPTION_KEY) {\n    // TODO SDK-1833: change this to an error in the next major version of `@clerk/nextjs`\n    logger.warnOnce(\n      'Clerk: Missing `CLERK_ENCRYPTION_KEY`. Required for propagating `secretKey` middleware option. See docs: https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys',\n    );\n\n    return;\n  }\n\n  const maybeKeylessEncryptionKey = isProductionEnvironment()\n    ? ENCRYPTION_KEY || assertKey(SECRET_KEY, () => errorThrower.throwMissingSecretKeyError())\n    : ENCRYPTION_KEY || SECRET_KEY || KEYLESS_ENCRYPTION_KEY;\n\n  return AES.encrypt(JSON.stringify({ ...keylessModeKeys, ...requestData }), maybeKeylessEncryptionKey).toString();\n}\n\n/**\n * Decrypt request data propagated between server requests.\n * @internal\n */\nexport function decryptClerkRequestData(\n  encryptedRequestData?: string | undefined | null,\n): Partial<AuthenticateRequestOptions> {\n  if (!encryptedRequestData) {\n    return {};\n  }\n\n  const maybeKeylessEncryptionKey = isProductionEnvironment()\n    ? ENCRYPTION_KEY || SECRET_KEY\n    : ENCRYPTION_KEY || SECRET_KEY || KEYLESS_ENCRYPTION_KEY;\n\n  try {\n    return decryptData(encryptedRequestData, maybeKeylessEncryptionKey);\n  } catch {\n    /**\n     * There is a great chance when running in Keyless mode that the above fails,\n     * because the keys hot-swapped and the Next.js dev server has not yet fully rebuilt middleware and routes.\n     *\n     * Attempt one more time with the default dummy value.\n     */\n    if (canUseKeyless) {\n      try {\n        return decryptData(encryptedRequestData, KEYLESS_ENCRYPTION_KEY);\n      } catch {\n        throwInvalidEncryptionKey();\n      }\n    }\n    throwInvalidEncryptionKey();\n  }\n}\n\nfunction throwInvalidEncryptionKey(): never {\n  if (isProductionEnvironment()) {\n    throw new Error(encryptionKeyInvalid);\n  }\n  throw new Error(encryptionKeyInvalidDev);\n}\n\nfunction decryptData(data: string, key: string) {\n  const decryptedBytes = AES.decrypt(data, key);\n  const encoded = decryptedBytes.toString(encUtf8);\n  return JSON.parse(encoded);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/data/getAuthDataFromRequest.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport { AuthStatus, constants, signedInAuthObject, signedOutAuthObject } from '@clerk/backend/internal';\nimport { decodeJwt } from '@clerk/backend/jwt';\n\nimport type { LoggerNoCommit } from '../../utils/debugLogger';\nimport { API_URL, API_VERSION, PUBLISHABLE_KEY, SECRET_KEY } from '../constants';\nimport { getAuthKeyFromRequest, getHeader } from '../headers-utils';\nimport type { RequestLike } from '../types';\nimport { assertTokenSignature, decryptClerkRequestData } from '../utils';\n\n/**\n * Given a request object, builds an auth object from the request data. Used in server-side environments to get access\n * to auth data for a given request.\n */\nexport function getAuthDataFromRequest(\n  req: RequestLike,\n  opts: { secretKey?: string; logger?: LoggerNoCommit } = {},\n): AuthObject {\n  const authStatus = getAuthKeyFromRequest(req, 'AuthStatus');\n  const authToken = getAuthKeyFromRequest(req, 'AuthToken');\n  const authMessage = getAuthKeyFromRequest(req, 'AuthMessage');\n  const authReason = getAuthKeyFromRequest(req, 'AuthReason');\n  const authSignature = getAuthKeyFromRequest(req, 'AuthSignature');\n\n  opts.logger?.debug('headers', { authStatus, authMessage, authReason });\n\n  const encryptedRequestData = getHeader(req, constants.Headers.ClerkRequestData);\n  const decryptedRequestData = decryptClerkRequestData(encryptedRequestData);\n\n  const options = {\n    secretKey: opts?.secretKey || decryptedRequestData.secretKey || SECRET_KEY,\n    publishableKey: decryptedRequestData.publishableKey || PUBLISHABLE_KEY,\n    apiUrl: API_URL,\n    apiVersion: API_VERSION,\n    authStatus,\n    authMessage,\n    authReason,\n  };\n\n  opts.logger?.debug('auth options', options);\n\n  let authObject;\n  if (!authStatus || authStatus !== AuthStatus.SignedIn) {\n    authObject = signedOutAuthObject(options);\n  } else {\n    assertTokenSignature(authToken as string, options.secretKey, authSignature);\n\n    const jwt = decodeJwt(authToken as string);\n\n    opts.logger?.debug('jwt', jwt.raw);\n\n    // @ts-expect-error -- Restrict parameter type of options to only list what's needed\n    authObject = signedInAuthObject(options, jwt.raw.text, jwt.payload);\n  }\n\n  return authObject;\n}\n"],"names":[],"mappings":";;;AACA,SAAS,YAAY,WAAW,oBAAoB,2BAA2B;AAC/E,SAAS,iBAAiB;AAI1B,SAAS,uBAAuB,iBAAiB;;AAEjD,SAAS,sBAAsB,+BAA+B;AAH9D,SAAS,SAAS,aAAa,iBAAiB,kBAAkB;;;;;;;AAS3D,SAAS,uBACd,GAAA,EACA,OAAwD,CAAC,CAAA,EAC7C;IAjBd,IAAA,IAAA,IAAA;IAkBE,MAAM,aAAa,2MAAA,EAAsB,KAAK,YAAY;IAC1D,MAAM,+LAAY,wBAAA,EAAsB,KAAK,WAAW;IACxD,MAAM,kBAAc,uMAAA,EAAsB,KAAK,aAAa;IAC5D,MAAM,gMAAa,wBAAA,EAAsB,KAAK,YAAY;IAC1D,MAAM,mMAAgB,wBAAA,EAAsB,KAAK,eAAe;IAEhE,CAAA,KAAA,KAAK,MAAA,KAAL,OAAA,KAAA,IAAA,GAAa,KAAA,CAAM,WAAW;QAAE;QAAY;QAAa;IAAW;IAEpE,MAAM,0MAAuB,YAAA,EAAU,sLAAK,YAAA,CAAU,OAAA,CAAQ,gBAAgB;IAC9E,MAAM,uBAAuB,kMAAA,EAAwB,oBAAoB;IAEzE,MAAM,UAAU;QACd,WAAA,CAAW,QAAA,OAAA,KAAA,IAAA,KAAM,SAAA,KAAa,qBAAqB,SAAA,4KAAa,aAAA;QAChE,gBAAgB,qBAAqB,cAAA,4KAAkB,kBAAA;QACvD,QAAQ,kLAAA;QACR,oLAAY,cAAA;QACZ;QACA;QACA;IACF;IAEA,CAAA,KAAA,KAAK,MAAA,KAAL,OAAA,KAAA,IAAA,GAAa,KAAA,CAAM,gBAAgB;IAEnC,IAAI;IACJ,IAAI,CAAC,cAAc,gMAAe,aAAA,CAAW,QAAA,EAAU;QACrD,kMAAa,sBAAA,EAAoB,OAAO;IAC1C,OAAO;QACL,CAAA,GAAA,mKAAA,CAAA,uBAAA,EAAqB,WAAqB,QAAQ,SAAA,EAAW,aAAa;QAE1E,MAAM,sKAAM,YAAA,EAAU,SAAmB;QAEzC,CAAA,KAAA,KAAK,MAAA,KAAL,OAAA,KAAA,IAAA,GAAa,KAAA,CAAM,OAAO,IAAI,GAAA;QAG9B,kMAAa,qBAAA,EAAmB,SAAS,IAAI,GAAA,CAAI,IAAA,EAAM,IAAI,OAAO;IACpE;IAEA,OAAO;AACT","ignoreList":[0]}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/createGetAuth.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport { constants } from '@clerk/backend/internal';\nimport { isTruthy } from '@clerk/shared/underscore';\n\nimport { withLogger } from '../utils/debugLogger';\nimport { isNextWithUnstableServerActions } from '../utils/sdk-versions';\nimport { getAuthDataFromRequest } from './data/getAuthDataFromRequest';\nimport { getAuthAuthHeaderMissing } from './errors';\nimport { detectClerkMiddleware, getHeader } from './headers-utils';\nimport type { RequestLike } from './types';\nimport { assertAuthStatus } from './utils';\n\n/**\n * The async variant of our old `createGetAuth` allows for asynchronous code inside its callback.\n * Should be used with function like `auth()` that are already asynchronous.\n */\nexport const createAsyncGetAuth = ({\n  debugLoggerName,\n  noAuthStatusMessage,\n}: {\n  debugLoggerName: string;\n  noAuthStatusMessage: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return async (req: RequestLike, opts?: { secretKey?: string }): Promise<AuthObject> => {\n      if (isTruthy(getHeader(req, constants.Headers.EnableDebug))) {\n        logger.enable();\n      }\n\n      if (!detectClerkMiddleware(req)) {\n        // Keep the same behaviour for versions that may have issues with bundling `node:fs`\n        if (isNextWithUnstableServerActions) {\n          assertAuthStatus(req, noAuthStatusMessage);\n        }\n\n        const missConfiguredMiddlewareLocation = await import('./fs/middleware-location.js')\n          .then(m => m.suggestMiddlewareLocation())\n          .catch(() => undefined);\n\n        if (missConfiguredMiddlewareLocation) {\n          throw new Error(missConfiguredMiddlewareLocation);\n        }\n\n        // still throw there is no suggested move location\n        assertAuthStatus(req, noAuthStatusMessage);\n      }\n\n      return getAuthDataFromRequest(req, { ...opts, logger });\n    };\n  });\n\n/**\n * Previous known as `createGetAuth`. We needed to create a sync and async variant in order to allow for improvements\n * that required dynamic imports (using `require` would not work).\n * It powers the synchronous top-level api `getAuh()`.\n */\nexport const createSyncGetAuth = ({\n  debugLoggerName,\n  noAuthStatusMessage,\n}: {\n  debugLoggerName: string;\n  noAuthStatusMessage: string;\n}) =>\n  withLogger(debugLoggerName, logger => {\n    return (req: RequestLike, opts?: { secretKey?: string }): AuthObject => {\n      if (isTruthy(getHeader(req, constants.Headers.EnableDebug))) {\n        logger.enable();\n      }\n\n      assertAuthStatus(req, noAuthStatusMessage);\n      return getAuthDataFromRequest(req, { ...opts, logger });\n    };\n  });\n\n/**\n * The `getAuth()` helper retrieves authentication state from the request object.\n *\n * @note\n * If you are using App Router, use the [`auth()` helper](https://clerk.com/docs/references/nextjs/auth) instead.\n *\n * @param req - The Next.js request object.\n * @param [options] - An optional object that can be used to configure the behavior of the `getAuth()` function.\n * @param [options.secretKey] - A string that represents the Secret Key used to sign the session token. If not provided, the Secret Key is retrieved from the environment variable `CLERK_SECRET_KEY`.\n * @returns The `Auth` object. See the [Auth reference](https://clerk.com/docs/references/backend/types/auth-object) for more information.\n *\n * @example\n * ### Protect API routes\n *\n * The following example demonstrates how to protect an API route by checking if the `userId` is present in the `getAuth()` response.\n *\n * ```tsx {{ filename: 'app/api/example/route.ts' }}\n * import { getAuth } from '@clerk/nextjs/server'\n * import type { NextApiRequest, NextApiResponse } from 'next'\n *\n * export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n *   const { userId } = getAuth(req)\n *\n *   if (!userId) {\n *     return res.status(401).json({ error: 'Not authenticated' })\n *   }\n *\n *   // Add logic that retrieves the data for the API route\n *\n *   return res.status(200).json({ userId: userId })\n * }\n * ```\n *\n * @example\n * ### Usage with `getToken()`\n *\n * `getAuth()` returns [`getToken()`](https://clerk.com/docs/references/backend/types/auth-object#get-token), which is a method that returns the current user's session token or a custom JWT template.\n *\n * ```tsx {{ filename: 'app/api/example/route.ts' }}\n * import { getAuth } from '@clerk/nextjs/server'\n * import type { NextApiRequest, NextApiResponse } from 'next'\n *\n * export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n *   const { getToken } = getAuth(req)\n *\n *   const token = await getToken({ template: 'supabase' })\n *\n *   // Add logic that retrieves the data\n *   // from your database using the token\n *\n *   return res.status(200).json({})\n * }\n * ```\n *\n * @example\n * ### Usage with `clerkClient`\n *\n * `clerkClient` is used to access the [Backend SDK](https://clerk.com/docs/references/backend/overview), which exposes Clerk's Backend API resources. You can use `getAuth()` to pass authentication information that many of the Backend SDK methods require, like the user's ID.\n *\n * ```tsx {{ filename: 'app/api/example/route.ts' }}\n * import { clerkClient, getAuth } from '@clerk/nextjs/server'\n * import type { NextApiRequest, NextApiResponse } from 'next'\n *\n * export default async function handler(req: NextApiRequest, res: NextApiResponse) {\n *   const { userId } = getAuth(req)\n *\n *   const client = await clerkClient()\n *\n *   const user = userId ? await client.users.getUser(userId) : null\n *\n *   return res.status(200).json({})\n * }\n * ```\n */\nexport const getAuth = createSyncGetAuth({\n  debugLoggerName: 'getAuth()',\n  noAuthStatusMessage: getAuthAuthHeaderMissing(),\n});\n"],"names":[],"mappings":";;;;;AACA,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AAEzB,SAAS,kBAAkB;;AAI3B,SAAS,uBAAuB,iBAAiB;;AAHjD,SAAS,uCAAuC;AAKhD,SAAS,wBAAwB;AAJjC,SAAS,8BAA8B;AACvC,SAAS,gCAAgC;;;;;;;;;;AASlC,MAAM,qBAAqB,CAAC,EACjC,eAAA,EACA,mBAAA,EACF,+KAIE,cAAA,EAAW,iBAAiB,CAAA,WAAU;QACpC,OAAO,OAAO,KAAkB,SAAuD;YACrF,QAAI,2KAAA,qLAAS,YAAA,EAAU,sLAAK,YAAA,CAAU,OAAA,CAAQ,WAAW,CAAC,GAAG;gBAC3D,OAAO,MAAA,CAAO;YAChB;YAEA,IAAI,EAAC,0MAAA,EAAsB,GAAG,GAAG;gBAE/B,iLAAI,kCAAA,EAAiC;oBACnC,CAAA,GAAA,mKAAA,CAAA,mBAAA,EAAiB,KAAK,mBAAmB;gBAC3C;gBAEA,MAAM,mCAAmC,MAAM,OAAO,6BAA6B,+HAChF,IAAA,CAAK,CAAA,IAAK,EAAE,yBAAA,CAA0B,CAAC,EACvC,KAAA,CAAM,IAAM,KAAA,CAAS;gBAExB,IAAI,kCAAkC;oBACpC,MAAM,IAAI,MAAM,gCAAgC;gBAClD;gBAGA,CAAA,GAAA,mKAAA,CAAA,mBAAA,EAAiB,KAAK,mBAAmB;YAC3C;YAEA,QAAO,yNAAA,EAAuB,KAAK;gBAAE,GAAG,IAAA;gBAAM;YAAO,CAAC;QACxD;IACF,CAAC;AAOI,MAAM,oBAAoB,CAAC,EAChC,eAAA,EACA,mBAAA,EACF,GAIE,0LAAA,EAAW,iBAAiB,CAAA,WAAU;QACpC,OAAO,CAAC,KAAkB,SAA8C;YACtE,wKAAI,WAAA,qLAAS,YAAA,EAAU,qLAAK,aAAA,CAAU,OAAA,CAAQ,WAAW,CAAC,GAAG;gBAC3D,OAAO,MAAA,CAAO;YAChB;YAEA,CAAA,GAAA,mKAAA,CAAA,mBAAA,EAAiB,KAAK,mBAAmB;YACzC,wMAAO,yBAAA,EAAuB,KAAK;gBAAE,GAAG,IAAA;gBAAM;YAAO,CAAC;QACxD;IACF,CAAC;AA4EI,MAAM,UAAU,kBAAkB;IACvC,iBAAiB;IACjB,8LAAqB,2BAAA,CAAyB;AAChD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/nextFetcher.ts"],"sourcesContent":["type Fetcher = typeof globalThis.fetch;\n\n/**\n * Based on nextjs internal implementation https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/server/lib/patch-fetch.ts#L23\n */\ntype NextFetcher = Fetcher & {\n  readonly __nextPatched: true;\n  readonly __nextGetStaticStore: () => { getStore: () => StaticGenerationAsyncStorage | undefined };\n};\n\n/**\n * Full type can be found https://github.com/vercel/next.js/blob/6185444e0a944a82e7719ac37dad8becfed86acd/packages/next/src/client/components/static-generation-async-storage.external.ts#L4\n */\ninterface StaticGenerationAsyncStorage {\n  /**\n   * Available for Next 14\n   */\n  readonly pagePath?: string;\n  /**\n   * Available for Next 15\n   */\n  readonly page?: string;\n}\n\nfunction isNextFetcher(fetch: Fetcher | NextFetcher): fetch is NextFetcher {\n  return '__nextPatched' in fetch && fetch.__nextPatched === true;\n}\n\nexport { isNextFetcher };\n"],"names":[],"mappings":";;;;AAwBA,SAAS,cAAc,KAAA,EAAoD;IACzE,OAAO,mBAAmB,SAAS,MAAM,aAAA,KAAkB;AAC7D","ignoreList":[0]}},
    {"offset": {"line": 950, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/protect.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport type { RedirectFun, SignedInAuthObject } from '@clerk/backend/internal';\nimport { constants } from '@clerk/backend/internal';\nimport type {\n  CheckAuthorizationFromSessionClaims,\n  CheckAuthorizationParamsFromSessionClaims,\n  CheckAuthorizationParamsWithCustomPermissions,\n  CheckAuthorizationWithCustomPermissions,\n  OrganizationCustomPermissionKey,\n} from '@clerk/types';\n\nimport { constants as nextConstants } from '../constants';\nimport { isNextFetcher } from './nextFetcher';\n\ntype AuthProtectOptions = {\n  /**\n   * The URL to redirect the user to if they are not authorized.\n   */\n  unauthorizedUrl?: string;\n  /**\n   * The URL to redirect the user to if they are not authenticated.\n   */\n  unauthenticatedUrl?: string;\n};\n\n/**\n * Throws a Nextjs notFound error if user is not authenticated or authorized.\n */\nexport interface AuthProtect {\n  <P extends OrganizationCustomPermissionKey>(\n    params?: CheckAuthorizationParamsFromSessionClaims<P>,\n    options?: AuthProtectOptions,\n  ): Promise<SignedInAuthObject>;\n\n  (\n    params?: (has: CheckAuthorizationFromSessionClaims) => boolean,\n    options?: AuthProtectOptions,\n  ): Promise<SignedInAuthObject>;\n\n  (options?: AuthProtectOptions): Promise<SignedInAuthObject>;\n}\n\nexport function createProtect(opts: {\n  request: Request;\n  authObject: AuthObject;\n  /**\n   * middleware and pages throw a notFound error if signed out\n   * but the middleware needs to throw an error it can catch\n   * use this callback to customise the behavior\n   */\n  notFound: () => never;\n  /**\n   * see {@link notFound} above\n   */\n  redirect: (url: string) => void;\n  /**\n   * protect() in middleware redirects to signInUrl if signed out\n   * protect() in pages throws a notFound error if signed out\n   * use this callback to customise the behavior\n   */\n  redirectToSignIn: RedirectFun<unknown>;\n}): AuthProtect {\n  const { redirectToSignIn, authObject, redirect, notFound, request } = opts;\n\n  return (async (...args: any[]) => {\n    const optionValuesAsParam = args[0]?.unauthenticatedUrl || args[0]?.unauthorizedUrl;\n    const paramsOrFunction = optionValuesAsParam\n      ? undefined\n      : (args[0] as\n          | CheckAuthorizationParamsWithCustomPermissions\n          | ((has: CheckAuthorizationWithCustomPermissions) => boolean));\n    const unauthenticatedUrl = (args[0]?.unauthenticatedUrl || args[1]?.unauthenticatedUrl) as string | undefined;\n    const unauthorizedUrl = (args[0]?.unauthorizedUrl || args[1]?.unauthorizedUrl) as string | undefined;\n\n    const handleUnauthenticated = () => {\n      if (unauthenticatedUrl) {\n        return redirect(unauthenticatedUrl);\n      }\n      if (isPageRequest(request)) {\n        // TODO: Handle runtime values. What happens if runtime values are set in middleware and in ClerkProvider as well?\n        return redirectToSignIn();\n      }\n      return notFound();\n    };\n\n    const handleUnauthorized = () => {\n      if (unauthorizedUrl) {\n        return redirect(unauthorizedUrl);\n      }\n      return notFound();\n    };\n\n    /**\n     * User is not authenticated\n     */\n    if (!authObject.userId) {\n      return handleUnauthenticated();\n    }\n\n    /**\n     * User is authenticated\n     */\n    if (!paramsOrFunction) {\n      return authObject;\n    }\n\n    /**\n     * if a function is passed and returns false then throw not found\n     */\n    if (typeof paramsOrFunction === 'function') {\n      if (paramsOrFunction(authObject.has)) {\n        return authObject;\n      }\n      return handleUnauthorized();\n    }\n\n    /**\n     * Checking if user is authorized when permission or role is passed\n     */\n    if (authObject.has(paramsOrFunction)) {\n      return authObject;\n    }\n\n    return handleUnauthorized();\n  }) as AuthProtect;\n}\n\nconst isServerActionRequest = (req: Request) => {\n  return (\n    !!req.headers.get(nextConstants.Headers.NextUrl) &&\n    (req.headers.get(constants.Headers.Accept)?.includes('text/x-component') ||\n      req.headers.get(constants.Headers.ContentType)?.includes('multipart/form-data') ||\n      !!req.headers.get(nextConstants.Headers.NextAction))\n  );\n};\n\nconst isPageRequest = (req: Request): boolean => {\n  return (\n    req.headers.get(constants.Headers.SecFetchDest) === 'document' ||\n    req.headers.get(constants.Headers.SecFetchDest) === 'iframe' ||\n    req.headers.get(constants.Headers.Accept)?.includes('text/html') ||\n    isAppRouterInternalNavigation(req) ||\n    isPagesRouterInternalNavigation(req)\n  );\n};\n\nconst isAppRouterInternalNavigation = (req: Request) =>\n  (!!req.headers.get(nextConstants.Headers.NextUrl) && !isServerActionRequest(req)) || isPagePathAvailable();\n\nconst isPagePathAvailable = () => {\n  const __fetch = globalThis.fetch;\n\n  if (!isNextFetcher(__fetch)) {\n    return false;\n  }\n\n  const { page, pagePath } = __fetch.__nextGetStaticStore().getStore() || {};\n\n  return Boolean(\n    // available on next@14\n    pagePath ||\n      // available on next@15\n      page,\n  );\n};\n\nconst isPagesRouterInternalNavigation = (req: Request) => !!req.headers.get(nextConstants.Headers.NextjsData);\n\n// /**\n//  * In case we want to handle router handlers and server actions differently in the future\n//  */\n// const isApiRouteRequest = (req: Request) => {\n//   return !isPageRequest(req) && !isServerActionRequest(req);\n// };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1036, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/app-router/server/auth.ts"],"sourcesContent":["import type { AuthObject } from '@clerk/backend';\nimport { constants, createClerkRequest, createRedirect, type RedirectFun } from '@clerk/backend/internal';\nimport { notFound, redirect } from 'next/navigation';\n\nimport { PUBLISHABLE_KEY, SIGN_IN_URL, SIGN_UP_URL } from '../../server/constants';\nimport { createAsyncGetAuth } from '../../server/createGetAuth';\nimport { authAuthHeaderMissing } from '../../server/errors';\nimport { getAuthKeyFromRequest, getHeader } from '../../server/headers-utils';\nimport type { AuthProtect } from '../../server/protect';\nimport { createProtect } from '../../server/protect';\nimport { decryptClerkRequestData } from '../../server/utils';\nimport { isNextWithUnstableServerActions } from '../../utils/sdk-versions';\nimport { buildRequestLike } from './utils';\n\n/**\n * `Auth` object of the currently active user and the `redirectToSignIn()` method.\n */\ntype Auth = AuthObject & {\n  /**\n   * The `auth()` helper returns the `redirectToSignIn()` method, which you can use to redirect the user to the sign-in page.\n   *\n   * @param [returnBackUrl] {string | URL} - The URL to redirect the user back to after they sign in.\n   *\n   * @note\n   * `auth()` on the server-side can only access redirect URLs defined via [environment variables](https://clerk.com/docs/deployments/clerk-environment-variables#sign-in-and-sign-up-redirects) or [`clerkMiddleware` dynamic keys](https://clerk.com/docs/references/nextjs/clerk-middleware#dynamic-keys).\n   */\n  redirectToSignIn: RedirectFun<ReturnType<typeof redirect>>;\n};\n\nexport interface AuthFn {\n  (): Promise<Auth>;\n\n  /**\n   * `auth` includes a single property, the `protect()` method, which you can use in two ways:\n   * - to check if a user is authenticated (signed in)\n   * - to check if a user is authorized (has the correct roles or permissions) to access something, such as a component or a route handler\n   *\n   * The following table describes how auth.protect() behaves based on user authentication or authorization status:\n   *\n   * | Authenticated | Authorized | `auth.protect()` will |\n   * | - | - | - |\n   * | Yes | Yes | Return the [`Auth`](https://clerk.com/docs/references/backend/types/auth-object) object. |\n   * | Yes | No | Return a `404` error. |\n   * | No | No | Redirect the user to the sign-in page\\*. |\n   *\n   * @important\n   * \\*For non-document requests, such as API requests, `auth.protect()` returns a `404` error to users who aren't authenticated.\n   *\n   * `auth.protect()` can be used to check if a user is authenticated or authorized to access certain parts of your application or even entire routes. See detailed examples in the [dedicated guide](https://clerk.com/docs/organizations/verify-user-permissions).\n   */\n  protect: AuthProtect;\n}\n\n/**\n * The `auth()` helper returns the [`Auth`](https://clerk.com/docs/references/backend/types/auth-object) object of the currently active user, as well as the [`redirectToSignIn()`](https://clerk.com/docs/references/nextjs/auth#redirect-to-sign-in) method.\n *\n * - Only available for App Router.\n * - Only works on the server-side, such as in Server Components, Route Handlers, and Server Actions.\n * - Requires [`clerkMiddleware()`](https://clerk.com/docs/references/nextjs/clerk-middleware) to be configured.\n */\nexport const auth: AuthFn = async () => {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  require('server-only');\n\n  const request = await buildRequestLike();\n\n  const stepsBasedOnSrcDirectory = async () => {\n    if (isNextWithUnstableServerActions) {\n      return [];\n    }\n\n    try {\n      const isSrcAppDir = await import('../../server/fs/middleware-location.js').then(m => m.hasSrcAppDir());\n      return [`Your Middleware exists at ./${isSrcAppDir ? 'src/' : ''}middleware.(ts|js)`];\n    } catch {\n      return [];\n    }\n  };\n  const authObject = await createAsyncGetAuth({\n    debugLoggerName: 'auth()',\n    noAuthStatusMessage: authAuthHeaderMissing('auth', await stepsBasedOnSrcDirectory()),\n  })(request);\n\n  const clerkUrl = getAuthKeyFromRequest(request, 'ClerkUrl');\n\n  const redirectToSignIn: RedirectFun<never> = (opts = {}) => {\n    const clerkRequest = createClerkRequest(request);\n    const devBrowserToken =\n      clerkRequest.clerkUrl.searchParams.get(constants.QueryParameters.DevBrowser) ||\n      clerkRequest.cookies.get(constants.Cookies.DevBrowser);\n\n    const encryptedRequestData = getHeader(request, constants.Headers.ClerkRequestData);\n    const decryptedRequestData = decryptClerkRequestData(encryptedRequestData);\n\n    return createRedirect({\n      redirectAdapter: redirect,\n      devBrowserToken: devBrowserToken,\n      baseUrl: clerkRequest.clerkUrl.toString(),\n      publishableKey: decryptedRequestData.publishableKey || PUBLISHABLE_KEY,\n      signInUrl: decryptedRequestData.signInUrl || SIGN_IN_URL,\n      signUpUrl: decryptedRequestData.signUpUrl || SIGN_UP_URL,\n    }).redirectToSignIn({\n      returnBackUrl: opts.returnBackUrl === null ? '' : opts.returnBackUrl || clerkUrl?.toString(),\n    });\n  };\n\n  return Object.assign(authObject, { redirectToSignIn });\n};\n\nauth.protect = async (...args: any[]) => {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  require('server-only');\n\n  const request = await buildRequestLike();\n  const authObject = await auth();\n\n  const protect = createProtect({\n    request,\n    authObject,\n    redirectToSignIn: authObject.redirectToSignIn,\n    notFound,\n    redirect,\n  });\n\n  return protect(...args);\n};\n"],"names":[],"mappings":";;;AACA,SAAS,WAAW,oBAAoB,sBAAwC;AAChF,SAAS,UAAU,gBAAgB;AAUnC,SAAS,wBAAwB;AADjC,SAAS,uCAAuC;AANhD,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;AACtC,SAAS,uBAAuB,iBAAiB;;AAGjD,SAAS,+BAA+B;;;AANxC,SAAS,iBAAiB,aAAa,mBAAmB;AAK1D,SAAS,qBAAqB;;;;;;;;;;;;AAmDvB,MAAM,OAAe,YAAY;;IAItC,MAAM,UAAU,+LAAM,mBAAA,CAAiB;IAEvC,MAAM,2BAA2B,YAAY;QAC3C,IAAI,+MAAA,EAAiC;YACnC,OAAO,CAAC,CAAA;QACV;QAEA,IAAI;YACF,MAAM,cAAc,MAAM,OAAO,wCAAwC,oHAAE,IAAA,CAAK,CAAA,IAAK,EAAE,YAAA,CAAa,CAAC;YACrG,OAAO;gBAAC,CAAA,4BAAA,EAA+B,cAAc,SAAS,EAAE,CAAA,kBAAA,CAAoB;aAAA;QACtF,EAAA,OAAQ;YACN,OAAO,CAAC,CAAA;QACV;IACF;IACA,MAAM,aAAa,MAAM,qMAAA,EAAmB;QAC1C,iBAAiB;QACjB,8LAAqB,wBAAA,EAAsB,QAAQ,MAAM,yBAAyB,CAAC;IACrF,CAAC,EAAE,OAAO;IAEV,MAAM,8LAAW,wBAAA,EAAsB,SAAS,UAAU;IAE1D,MAAM,mBAAuC,CAAC,OAAO,CAAC,CAAA,KAAM;QAC1D,MAAM,eAAe,0MAAA,EAAmB,OAAO;QAC/C,MAAM,kBACJ,aAAa,QAAA,CAAS,YAAA,CAAa,GAAA,iLAAI,aAAA,CAAU,eAAA,CAAgB,UAAU,KAC3E,aAAa,OAAA,CAAQ,GAAA,kLAAI,YAAA,CAAU,OAAA,CAAQ,UAAU;QAEvD,MAAM,0MAAuB,YAAA,EAAU,0LAAS,YAAA,CAAU,OAAA,CAAQ,gBAAgB;QAClF,MAAM,+LAAuB,0BAAA,EAAwB,oBAAoB;QAEzE,mLAAO,iBAAA,EAAe;YACpB,uMAAiB,WAAA;YACjB;YACA,SAAS,aAAa,QAAA,CAAS,QAAA,CAAS;YACxC,gBAAgB,qBAAqB,cAAA,4KAAkB,kBAAA;YACvD,WAAW,qBAAqB,SAAA,4KAAa,cAAA;YAC7C,WAAW,qBAAqB,SAAA,4KAAa,cAAA;QAC/C,CAAC,EAAE,gBAAA,CAAiB;YAClB,eAAe,KAAK,aAAA,KAAkB,OAAO,KAAK,KAAK,aAAA,IAAA,CAAiB,YAAA,OAAA,KAAA,IAAA,SAAU,QAAA,EAAA;QACpF,CAAC;IACH;IAEA,OAAO,OAAO,MAAA,CAAO,YAAY;QAAE;IAAiB,CAAC;AACvD;AAEA,KAAK,OAAA,GAAU,OAAA,GAAU,SAAgB;;IAIvC,MAAM,UAAU,+LAAM,mBAAA,CAAiB;IACvC,MAAM,aAAa,MAAM,KAAK;IAE9B,MAAM,oLAAU,gBAAA,EAAc;QAC5B;QACA;QACA,kBAAkB,WAAW,gBAAA;wMAC7B,WAAA;wMACA,WAAA;IACF,CAAC;IAED,OAAO,QAAQ,GAAG,IAAI;AACxB","ignoreList":[0]}},
    {"offset": {"line": 1119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1125, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/middleware-storage.ts"],"sourcesContent":["import { AsyncLocalStorage } from 'node:async_hooks';\n\nimport type { AuthenticateRequestOptions } from '@clerk/backend/internal';\n\nexport const clerkMiddlewareRequestDataStore = new Map<'requestData', AuthenticateRequestOptions>();\nexport const clerkMiddlewareRequestDataStorage = new AsyncLocalStorage<typeof clerkMiddlewareRequestDataStore>();\n"],"names":[],"mappings":";;;;AAAA,SAAS,yBAAyB;;;AAI3B,MAAM,kCAAkC,aAAA,GAAA,IAAI,IAA+C;AAC3F,MAAM,oCAAoC,oIAAI,oBAAA,CAA0D","ignoreList":[0]}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/createClerkClient.ts"],"sourcesContent":["import { createClerkClient } from '@clerk/backend';\n\nimport {\n  API_URL,\n  API_VERSION,\n  DOMAIN,\n  IS_SATELLITE,\n  PROXY_URL,\n  PUBLISHABLE_KEY,\n  SDK_METADATA,\n  SECRET_KEY,\n  TELEMETRY_DEBUG,\n  TELEMETRY_DISABLED,\n} from './constants';\n\nconst clerkClientDefaultOptions = {\n  secretKey: SECRET_KEY,\n  publishableKey: PUBLISHABLE_KEY,\n  apiUrl: API_URL,\n  apiVersion: API_VERSION,\n  userAgent: `${PACKAGE_NAME}@${PACKAGE_VERSION}`,\n  proxyUrl: PROXY_URL,\n  domain: DOMAIN,\n  isSatellite: IS_SATELLITE,\n  sdkMetadata: SDK_METADATA,\n  telemetry: {\n    disabled: TELEMETRY_DISABLED,\n    debug: TELEMETRY_DEBUG,\n  },\n};\n\nexport const createClerkClientWithOptions: typeof createClerkClient = options =>\n  createClerkClient({ ...clerkClientDefaultOptions, ...options });\n"],"names":[],"mappings":";;;AAAA,SAAS,yBAAyB;AAElC;;;;AAaA,MAAM,4BAA4B;IAChC,mLAAW,aAAA;IACX,wLAAgB,kBAAA;IAChB,gLAAQ,UAAA;IACR,mLAAY,eAAA;IACZ,WAAW,GAAG,eAAY,CAAA,CAAA,EAAI,QAAe,EAAA;IAC7C,kLAAU,YAAA;IACV,gLAAQ,SAAA;IACR,aAAa,uLAAA;IACb,qLAAa,eAAA;IACb,WAAW;QACT,kLAAU,qBAAA;QACV,+KAAO,kBAAA;IACT;AACF;AAEO,MAAM,+BAAyD,CAAA,mKACpE,oBAAA,EAAkB;QAAE,GAAG,yBAAA;QAA2B,GAAG,OAAA;IAAQ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/server/clerkClient.ts"],"sourcesContent":["import { constants } from '@clerk/backend/internal';\n\nimport { buildRequestLike, isPrerenderingBailout } from '../app-router/server/utils';\nimport { createClerkClientWithOptions } from './createClerkClient';\nimport { getHeader } from './headers-utils';\nimport { clerkMiddlewareRequestDataStorage } from './middleware-storage';\nimport { decryptClerkRequestData } from './utils';\n\n/**\n * Constructs a BAPI client that accesses request data within the runtime.\n * Necessary if middleware dynamic keys are used.\n */\nconst clerkClient = async () => {\n  let requestData;\n\n  try {\n    const request = await buildRequestLike();\n    const encryptedRequestData = getHeader(request, constants.Headers.ClerkRequestData);\n    requestData = decryptClerkRequestData(encryptedRequestData);\n  } catch (err) {\n    if (err && isPrerenderingBailout(err)) {\n      // eslint-disable-next-line @typescript-eslint/only-throw-error\n      throw err;\n    }\n  }\n\n  // Fallbacks between options from middleware runtime and `NextRequest` from application server\n  const options = clerkMiddlewareRequestDataStorage.getStore()?.get('requestData') ?? requestData;\n  if (options?.secretKey || options?.publishableKey) {\n    return createClerkClientWithOptions(options);\n  }\n\n  return createClerkClientWithOptions({});\n};\n\nexport { clerkClient };\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB;AAE1B,SAAS,kBAAkB,6BAA6B;AAExD,SAAS,iBAAiB;;AAE1B,SAAS,+BAA+B;AADxC,SAAS,yCAAyC;AAFlD,SAAS,oCAAoC;;;;;;;;AAS7C,MAAM,cAAc,YAAY;IAZhC,IAAA,IAAA;IAaE,IAAI;IAEJ,IAAI;QACF,MAAM,UAAU,MAAM,4MAAA,CAAiB;QACvC,MAAM,0MAAuB,YAAA,EAAU,0LAAS,YAAA,CAAU,OAAA,CAAQ,gBAAgB;QAClF,sLAAc,0BAAA,EAAwB,oBAAoB;IAC5D,EAAA,OAAS,KAAK;QACZ,IAAI,OAAO,iNAAA,EAAsB,GAAG,GAAG;YAErC,MAAM;QACR;IACF;IAGA,MAAM,UAAA,CAAU,KAAA,CAAA,KAAA,mLAAA,CAAA,oCAAA,CAAkC,QAAA,CAAS,CAAA,KAA3C,OAAA,KAAA,IAAA,GAA8C,GAAA,CAAI,cAAA,KAAlD,OAAA,KAAoE;IACpF,IAAA,CAAI,WAAA,OAAA,KAAA,IAAA,QAAS,SAAA,KAAA,CAAa,WAAA,OAAA,KAAA,IAAA,QAAS,cAAA,GAAgB;QACjD,2LAAO,+BAAA,EAA6B,OAAO;IAC7C;IAEA,2LAAO,+BAAA,EAA6B,CAAC,CAAC;AACxC","ignoreList":[0]}},
    {"offset": {"line": 1214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1220, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/%40clerk/nextjs/src/app-router/server/currentUser.ts"],"sourcesContent":["import type { User } from '@clerk/backend';\n\nimport { clerkClient } from '../../server/clerkClient';\nimport { auth } from './auth';\n\n/**\n * The `currentUser` helper returns the [Backend User](https://clerk.com/docs/references/backend/types/backend-user) object of the currently active user. It can be used in Server Components, Route Handlers, and Server Actions.\n *\n * Under the hood, this helper:\n * - calls `fetch()`, so it is automatically deduped per request.\n * - uses the [`GET /v1/users/{user_id}`](https://clerk.com/docs/reference/backend-api/tag/Users#operation/GetUser) endpoint.\n * - counts towards the [Backend API request rate limit](https://clerk.com/docs/backend-requests/resources/rate-limits#rate-limits).\n *\n * @example\n * ```tsx {{ filename: 'app/page.tsx' }}\n * import { currentUser } from '@clerk/nextjs/server'\n *\n * export default async function Page() {\n *  const user = await currentUser()\n *\n *  if (!user) return <div>Not signed in</div>\n *\n *  return <div>Hello {user?.firstName}</div>\n * }\n * ```\n */\nexport async function currentUser(): Promise<User | null> {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  require('server-only');\n\n  const { userId } = await auth();\n  if (!userId) {\n    return null;\n  }\n\n  return (await clerkClient()).users.getUser(userId);\n}\n"],"names":[],"mappings":";;;AAGA,SAAS,YAAY;AADrB,SAAS,mBAAmB;;;;AAwB5B,eAAsB,cAAoC;;IAIxD,MAAM,EAAE,MAAA,CAAO,CAAA,GAAI,8LAAM,OAAA,CAAK;IAC9B,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IAEA,OAAA,CAAQ,oLAAM,cAAA,CAAY,EAAA,EAAG,KAAA,CAAM,OAAA,CAAQ,MAAM;AACnD","ignoreList":[0]}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}