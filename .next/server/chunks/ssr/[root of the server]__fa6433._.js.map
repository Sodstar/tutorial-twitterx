{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/actions/book.action.tsx"],"sourcesContent":["\"use server\";\nimport React from \"react\";\nimport axios from \"axios\";\n//ExpressJS Backend-ээс өгөгдөл авах жишээ код\nexport async function getAllBooks() {\n  try {\n    const res = await axios.get(`${process.env.NEXT_PUBLIC_BACKEND_URL}/books`);\n    const result = res.data;\n    return result;\n  } catch (error) {\n    console.log(error + \"Failed to fetch book\");\n    return { data: [] };\n  }\n}\n\nexport async function getBookById(id: number) {\n  try {\n    const res = await axios.get(\n      `${process.env.NEXT_PUBLIC_BACKEND_URL}/books/${id}`\n    );\n    const result = res.data;\n    return result;\n  } catch (error) {\n    return { success: false, error: \"Failed to fetch book\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA;;;;AAEO,eAAe,uCAAS,GAAT;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,6DAAuC,MAAM,CAAC;QAC1E,MAAM,SAAS,IAAI,IAAI;QACvB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,QAAQ;QACpB,OAAO;YAAE,MAAM,EAAE;QAAC;IACpB;AACF;AAEO,eAAe,uCAAS,GAAT,YAAY,EAAU;IAC1C,IAAI;QACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CACzB,6DAAuC,OAAO,EAAE,IAAI;QAEtD,MAAM,SAAS,IAAI,IAAI;QACvB,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,SAAS;YAAO,OAAO;QAAuB;IACzD;AACF;;;IArBsB;IAWA;;AAXA,+OAAA;AAWA,+OAAA"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/books/%5Bid%5D/page.tsx"],"sourcesContent":["import { getAllBooks, getBookById } from \"@/actions/book.action\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport Link from \"next/link\";\nimport { notFound } from \"next/navigation\";\nimport React from \"react\";\n\ntype BookType = Awaited<ReturnType<typeof getAllBooks>>;\ntype BookOne = BookType[number];\n\nasync function page({ params }: { params: { id: number } }) {\n  const book = await getBookById(params.id);\n   if (!book) notFound();\n  console.log(book);\n  return (\n    <div>\n      <div className=\"font-bold\">{book.data.title}</div>\n      <Card className=\"mt-4\">\n        <CardHeader>{book.data.title}</CardHeader>\n        <CardContent><Link\n              href=\"/books\"\n              className=\"flex flex-col\"\n            >\n            <div className=\"text-muted-foreground\">Буцах</div>\n            </Link></CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default page;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;AAMA,eAAe,KAAK,EAAE,MAAM,EAA8B;IACxD,MAAM,OAAO,MAAM,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD,EAAE,OAAO,EAAE;IACvC,IAAI,CAAC,MAAM,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACnB,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC;;0BACC,8OAAC;gBAAI,WAAU;0BAAa,KAAK,IAAI,CAAC,KAAK;;;;;;0BAC3C,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,gIAAA,CAAA,aAAU;kCAAE,KAAK,IAAI,CAAC,KAAK;;;;;;kCAC5B,8OAAC,gIAAA,CAAA,cAAW;kCAAC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACZ,MAAK;4BACL,WAAU;sCAEZ,cAAA,8OAAC;gCAAI,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKnD;uCAEe"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}