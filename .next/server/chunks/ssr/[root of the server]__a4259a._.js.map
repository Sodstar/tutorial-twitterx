{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/lib/logger.tsx"],"sourcesContent":["import winston from \"winston\";\n\nexport const logger = winston.createLogger({\n  level: \"info\",\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.printf(({ timestamp, level, message }) => {\n      return `[${timestamp}] ${level}: ${message}`;\n    })\n  ),\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: \"logs/app.log\" }),\n  ],\n});"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,yIAAA,CAAA,UAAO,CAAC,YAAY,CAAC;IACzC,OAAO;IACP,QAAQ,yIAAA,CAAA,UAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,yIAAA,CAAA,UAAO,CAAC,MAAM,CAAC,SAAS,IACxB,yIAAA,CAAA,UAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE;QAClD,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,SAAS;IAC9C;IAEF,YAAY;QACV,IAAI,yIAAA,CAAA,UAAO,CAAC,UAAU,CAAC,OAAO;QAC9B,IAAI,yIAAA,CAAA,UAAO,CAAC,UAAU,CAAC,IAAI,CAAC;YAAE,UAAU;QAAe;KACxD;AACH"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/lib/mongoose.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nimport { logger } from \"@/lib/logger\"; // Assuming logger.ts is located in lib\n\nconst MONGODB_URI = process.env.MONGODB_URI as string;\n\nif (!MONGODB_URI) {\n  throw new Error(\"Please define the MONGODB_URI environment variable.\");\n}\n\nlet cached = (global as any).mongoose || { conn: null, promise: null };\n\nexport async function connectDB() {\n  if (cached.conn) {\n    logger.info(\"MongoDB Connection (cached)\");\n    return cached.conn; \n  }\n\n  if (!cached.promise) {\n    cached.promise = mongoose.connect(MONGODB_URI, {\n      dbName: \"ecommerce\"\n    })\n      .then((mongooseInstance) => {\n        cached.conn = mongooseInstance;\n        logger.info(\"MongoDB Connected\");\n        return cached.conn;\n      })\n      .catch((error) => {\n        logger.error(`MongoDB Connection Error: ${error.message}`);\n        throw new Error(`MongoDB Connection Error: ${error.message}`); \n      });\n  }\n\n  try {\n    return await cached.promise;\n  } catch (error) {\n    logger.error(`Error establishing MongoDB connection: ${error}`);\n    throw new Error(`Error establishing MongoDB connection: ${error}`);\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA,yMAAuC,uCAAuC;;;AAE9E,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,AAAC,OAAe,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE9D,eAAe;IACpB,IAAI,OAAO,IAAI,EAAE;QACf,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;QACZ,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;YAC7C,QAAQ;QACV,GACG,IAAI,CAAC,CAAC;YACL,OAAO,IAAI,GAAG;YACd,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC;YACZ,OAAO,OAAO,IAAI;QACpB,GACC,KAAK,CAAC,CAAC;YACN,qHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,CAAC,0BAA0B,EAAE,MAAM,OAAO,EAAE;YACzD,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,MAAM,OAAO,EAAE;QAC9D;IACJ;IAEA,IAAI;QACF,OAAO,MAAM,OAAO,OAAO;IAC7B,EAAE,OAAO,OAAO;QACd,qHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,CAAC,uCAAuC,EAAE,OAAO;QAC9D,MAAM,IAAI,MAAM,CAAC,uCAAuC,EAAE,OAAO;IACnE;AACF"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/models/productMongo.ts"],"sourcesContent":["import mongoose, { Schema, Document, Model } from \"mongoose\";\nimport { ICategory } from \"./categoryMongo\"; \n\nexport interface IProduct extends Document {\n    _id: number;\n    title: string;\n    description: string;\n    price: number;\n    image: string;\n    stock:number;\n    category: ICategory[\"_id\"];\n\n}\n\nconst ProductSchema = new Schema<IProduct>(\n    {\n        _id: { type: Number, required: true },\n        title: { type: String, required: true, unique: true },\n        description: { type: String, required: true },\n        price: { type: Number, required: true },\n        image: { type: String, required: false },\n        stock: { type: Number, required: true ,default:0},\n    },\n    { timestamps: true }\n);\n\nlet ProductModel: Model<IProduct>;\n\nif (mongoose.models.Products) {\n  ProductModel = mongoose.models.Products;\n} else {\n  ProductModel = mongoose.model<IProduct>(\"Products\", ProductSchema);\n}\n\nexport { ProductModel };\n"],"names":[],"mappings":";;;AAAA;;AAcA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAC5B;IACI,KAAK;QAAE,MAAM;QAAQ,UAAU;IAAK;IACpC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAM;IACvC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,SAAQ;IAAC;AACpD,GACA;IAAE,YAAY;AAAK;AAGvB,IAAI;AAEJ,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;IAC5B,eAAe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ;AACzC,OAAO;IACL,eAAe,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAW,YAAY;AACtD"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/actions/product.action.tsx"],"sourcesContent":["\"use server\";\n\nimport { connectDB } from \"@/lib/mongoose\";\nimport { ProductModel } from \"@/models/productMongo\";\nimport { revalidatePath, unstable_cache } from \"next/cache\";\nimport { logger } from \"@/lib/logger\";\n\nexport const getCachedProducts = unstable_cache(\n  async () => {\n    try {\n      await connectDB();\n      const products = await ProductModel.find({});\n      return products;\n    } catch (error) {\n      logger.error(\"Error fetching products:\", error);\n      throw new Error(\"Failed to fetch products\");\n    }\n  },\n  [\"products\"],\n  { revalidate: 1 }\n);\n\nexport async function getProductById(productId: Number) {\n  try {\n    await connectDB();\n    const product = await ProductModel.findById(productId);\n    if (!product) throw new Error(\"Product not found\");\n    return product;\n  } catch (error) {\n    logger.error(`Error fetching product ID ${productId}:`, error);\n    throw new Error(\"Failed to fetch product\");\n  }\n}\n\nexport async function checkExistingProduct(name: string) {\n  try {\n    await connectDB();\n    return await ProductModel.findOne({ name });\n  } catch (error) {\n    logger.error(`Error checking existing product ${name}:`, error);\n    throw new Error(\"Failed to check product existence\");\n  }\n}\n\nexport async function createProduct(\n  name: string,\n  price: number,\n  description: string\n) {\n  try {\n    await connectDB();\n\n    const existingProduct = await checkExistingProduct(name);\n    if (existingProduct) throw new Error(\"Product already exists\");\n\n    const newProduct = new ProductModel({ name, price, description });\n    await newProduct.save();\n\n    revalidatePath(\"/products\");\n\n    logger.info(`Product created: ${name}`);\n    return newProduct;\n  } catch (error) {\n    logger.error(\"Error creating product:\", error);\n    throw new Error(\"Failed to create product\");\n  }\n}\n\nexport async function updateProduct(\n  productId: string,\n  updateData: Partial<{ name: string; price: number; description: string }>\n) {\n  try {\n    await connectDB();\n    const updatedProduct = await ProductModel.findByIdAndUpdate(\n      productId,\n      updateData,\n      { new: true }\n    );\n\n    if (!updatedProduct) throw new Error(\"Product not found\");\n\n    // Revalidate cache\n    revalidatePath(\"/products\");\n\n    logger.info(`Product updated: ${productId}`);\n    return updatedProduct;\n  } catch (error) {\n    logger.error(`Error updating product ID ${productId}:`, error);\n    throw new Error(\"Failed to update product\");\n  }\n}\n\nexport async function deleteProduct(productId: string) {\n  try {\n    await connectDB();\n    const deletedProduct = await ProductModel.findByIdAndDelete(productId);\n\n    if (!deletedProduct) throw new Error(\"Product not found\");\n\n    revalidatePath(\"/products\");\n\n    logger.info(`Product deleted: ${productId}`);\n    return deletedProduct;\n  } catch (error) {\n    logger.error(`Error deleting product ID ${productId}:`, error);\n    throw new Error(\"Failed to delete product\");\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/products/%5Bid%5D/ProductPageClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/products/[id]/ProductPageClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/products/[id]/ProductPageClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+S,GAC5U,6EACA"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/products/%5Bid%5D/ProductPageClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/products/[id]/ProductPageClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/products/[id]/ProductPageClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2R,GACxT,yDACA"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/products/%5Bid%5D/page.tsx"],"sourcesContent":["import React from 'react'\nimport { notFound } from \"next/navigation\";\nimport { getProductById } from '@/actions/product.action';\nimport ProductPageClient from './ProductPageClient';\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: { id: number };\n}) {\n  const product = await getProductById(params.id);\n  if (!product) return;\n\n  return {\n    title: `${product.title ?? product._id}`,\n    description: product.description || '',\n    openGraph: {\n      title: \"OG: гарчиг\",\n      images: \"\",\n      description: \"\",\n    },\n  };\n}\nasync function productDetailPage({ params }: { params: { id: Number } }) {\n  \n    const product = await getProductById(params.id);\n    // const [product] = await Promise.all([\n    //   getProductById(params.id)\n    // ]);\n\n    const data = JSON.parse(JSON.stringify(product))\n    // const updatedProduct = { ...product, _id: product._id.toString() }\n\n  return (\n    \n    <ProductPageClient product={data} />\n  )\n}\n\nexport default productDetailPage;"],"names":[],"mappings":";;;;;AAEA;AACA;;;;AAEO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,UAAU,MAAM,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,EAAE;IAC9C,IAAI,CAAC,SAAS;IAEd,OAAO;QACL,OAAO,GAAG,QAAQ,KAAK,IAAI,QAAQ,GAAG,EAAE;QACxC,aAAa,QAAQ,WAAW,IAAI;QACpC,WAAW;YACT,OAAO;YACP,QAAQ;YACR,aAAa;QACf;IACF;AACF;AACA,eAAe,kBAAkB,EAAE,MAAM,EAA8B;IAEnE,MAAM,UAAU,MAAM,CAAA,GAAA,oIAAA,CAAA,iBAAc,AAAD,EAAE,OAAO,EAAE;IAC9C,wCAAwC;IACxC,8BAA8B;IAC9B,MAAM;IAEN,MAAM,OAAO,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IACvC,qEAAqE;IAEvE,qBAEE,8OAAC,sJAAA,CAAA,UAAiB;QAAC,SAAS;;;;;;AAEhC;uCAEe"}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}