{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/components/CreatePost.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CreatePost.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CreatePost.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/components/CreatePost.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/CreatePost.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/CreatePost.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/components/FollowButton.tsx"],"sourcesContent":["import React from 'react'\n\nexport default function FollowButton(userId: string) {\n  return (\n    <div>FollowButton</div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEe,SAAS,aAAa,MAAc;IACjD,qBACE,8OAAC;kBAAI;;;;;;AAET"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/components/WhoToFollow.tsx"],"sourcesContent":["import { getRandomUsers } from \"@/actions/user.action\";\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport Link from \"next/link\";\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\nimport FollowButton from \"./FollowButton\";\n\nasync function WhoToFollow() {\n  const users = await getRandomUsers();\n  console.log(users);\n  if (users.length === 0) return null;\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Таньд санал болгох</CardTitle>\n      </CardHeader>\n      <CardContent>\n      <div className=\"space-y-4\">\n          {users.map((user) => (\n            <div key={user.id} className=\"flex gap-2 items-center justify-between \">\n              <div className=\"flex items-center gap-1\">\n                <Link href={`/profile/${user.username}`}>\n                  <Avatar>\n                    <AvatarImage src={user.image ?? \"/avatar.png\"} />\n                  </Avatar>\n                </Link>\n                <div className=\"text-xs\">\n                  <Link href={`/profile/${user.username}`} className=\"font-medium cursor-pointer\">\n                    {user.name}\n                  </Link>\n                  <p className=\"text-muted-foreground\">@{user.username}</p>\n                  <p className=\"text-muted-foreground\">{user._count.followers} followers</p>\n                </div>\n              </div>\n              <FollowButton userId={user.id} />\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default WhoToFollow;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAEA,eAAe;IACb,MAAM,QAAQ,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACjC,QAAQ,GAAG,CAAC;IACZ,IAAI,MAAM,MAAM,KAAK,GAAG,OAAO;IAC/B,qBACE,8OAAC,gIAAA,CAAA,OAAI;;0BACH,8OAAC,gIAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,8OAAC,gIAAA,CAAA,cAAW;0BACZ,cAAA,8OAAC;oBAAI,WAAU;8BACV,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;4BAAkB,WAAU;;8CAC3B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,QAAQ,EAAE;sDACrC,cAAA,8OAAC,kIAAA,CAAA,SAAM;0DACL,cAAA,8OAAC,kIAAA,CAAA,cAAW;oDAAC,KAAK,KAAK,KAAK,IAAI;;;;;;;;;;;;;;;;sDAGpC,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,4JAAA,CAAA,UAAI;oDAAC,MAAM,CAAC,SAAS,EAAE,KAAK,QAAQ,EAAE;oDAAE,WAAU;8DAChD,KAAK,IAAI;;;;;;8DAEZ,8OAAC;oDAAE,WAAU;;wDAAwB;wDAAE,KAAK,QAAQ;;;;;;;8DACpD,8OAAC;oDAAE,WAAU;;wDAAyB,KAAK,MAAM,CAAC,SAAS;wDAAC;;;;;;;;;;;;;;;;;;;8CAGhE,8OAAC,kIAAA,CAAA,UAAY;oCAAC,QAAQ,KAAK,EAAE;;;;;;;2BAfrB,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAsB7B;uCAEe"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/app/page.tsx"],"sourcesContent":["import { SignedOut, SignInButton, SignedIn, UserButton } from \"@clerk/nextjs\";\nimport Image from \"next/image\";\nimport { Button } from \"@/components/ui/button\";\nimport ModeToggle from \"@/components/ModeToggle\";\nimport { currentUser } from \"@clerk/nextjs/server\";\nimport CreatePost from \"@/components/CreatePost\";\nimport WhoToFollow from \"@/components/WhoToFollow\";\n\nexport default async function Home() {\n  const user = await currentUser();\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-10 gap-6\">\n      <div className=\"lg:col-span-6\">\n        {user ? <CreatePost />:null}\n      </div>\n      <div className=\"hidden lg:block lg:col-span-4 sticky top-20\">\n        <WhoToFollow />\n      </div>\n    </div>\n  ); \n}\n"],"names":[],"mappings":";;;;AAKA;AACA;AAFA;;;;;AAIe,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,0LAAA,CAAA,cAAW,AAAD;IAE7B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACZ,qBAAO,8OAAC,gIAAA,CAAA,UAAU;;;;2BAAI;;;;;;0BAEzB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;AAIpB"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/src/actions/post.action.tsx"],"sourcesContent":["\"use server\";\nimport prisma from \"@/lib/prisma\";\nimport { getDBUserID } from \"./user.action\";\nimport { revalidatePath } from \"next/cache\";\n\nexport async function createPost(content: string, imageUrl: string) {\n  try {\n    const userId = await getDBUserID();\n    const post = await prisma.post.create({\n      data: {\n        content,\n        image: imageUrl, // directly write image\n        authorId: userId,\n      },\n    });\n\n    revalidatePath(\"/\"); //purge the cache for the home page\n    return {success:true, post}\n  } catch (error) {\n    console.error(error);\n    return {success:false, error:\"Failed to create post\"};\n  }\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;;;;;AAEO,eAAe,uCAAQ,GAAR,WAAW,OAAe,EAAE,QAAgB;IAChE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD;QAC/B,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,MAAM;gBACJ;gBACA,OAAO;gBACP,UAAU;YACZ;QACF;QAEA,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,mCAAmC;QACxD,OAAO;YAAC,SAAQ;YAAM;QAAI;IAC5B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO;YAAC,SAAQ;YAAO,OAAM;QAAuB;IACtD;AACF;;;IAjBsB;;AAAA,+OAAA"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}