{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/error-formatter.js"],"sourcesContent":["function defaultErrorFormatter(error) {\n    return {\n        message: error.message\n    };\n}\nfunction formatError(error, router) {\n    const firstSlug = Object.keys(router)[0];\n    const errorFormatter = firstSlug ? router[firstSlug]?.errorFormatter ?? defaultErrorFormatter : defaultErrorFormatter;\n    return errorFormatter(error);\n}\n\nexport { defaultErrorFormatter, formatError };\n"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB,KAAK;IAChC,OAAO;QACH,SAAS,MAAM,OAAO;IAC1B;AACJ;AACA,SAAS,YAAY,KAAK,EAAE,MAAM;IAC9B,MAAM,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;IACxC,MAAM,iBAAiB,YAAY,MAAM,CAAC,UAAU,EAAE,kBAAkB,wBAAwB;IAChG,OAAO,eAAe;AAC1B","ignoreList":[0]}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/upload-builder.js"],"sourcesContent":["import { defaultErrorFormatter } from './error-formatter.js';\n\nfunction internalCreateBuilder(initDef = {}) {\n    const _def = {\n        $types: {},\n        // Default router config\n        routerConfig: {\n            image: {\n                maxFileSize: \"4MB\"\n            }\n        },\n        routeOptions: {\n            awaitServerData: true\n        },\n        inputParser: {\n            parseAsync: ()=>Promise.resolve(undefined),\n            _input: undefined,\n            _output: undefined\n        },\n        middleware: ()=>({}),\n        onUploadError: ()=>{\n        // noop\n        },\n        onUploadComplete: ()=>undefined,\n        errorFormatter: initDef.errorFormatter ?? defaultErrorFormatter,\n        // Overload with properties passed in\n        ...initDef\n    };\n    return {\n        input (userParser) {\n            return internalCreateBuilder({\n                ..._def,\n                inputParser: userParser\n            });\n        },\n        middleware (userMiddleware) {\n            return internalCreateBuilder({\n                ..._def,\n                middleware: userMiddleware\n            });\n        },\n        onUploadComplete (userUploadComplete) {\n            return {\n                ..._def,\n                onUploadComplete: userUploadComplete\n            };\n        },\n        onUploadError (userOnUploadError) {\n            return internalCreateBuilder({\n                ..._def,\n                onUploadError: userOnUploadError\n            });\n        }\n    };\n}\nfunction createBuilder(opts) {\n    return (input, config)=>{\n        return internalCreateBuilder({\n            routerConfig: input,\n            routeOptions: config ?? {},\n            ...opts\n        });\n    };\n}\n\nexport { createBuilder };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,sBAAsB,UAAU,CAAC,CAAC;IACvC,MAAM,OAAO;QACT,QAAQ,CAAC;QACT,wBAAwB;QACxB,cAAc;YACV,OAAO;gBACH,aAAa;YACjB;QACJ;QACA,cAAc;YACV,iBAAiB;QACrB;QACA,aAAa;YACT,YAAY,IAAI,QAAQ,OAAO,CAAC;YAChC,QAAQ;YACR,SAAS;QACb;QACA,YAAY,IAAI,CAAC,CAAC,CAAC;QACnB,eAAe;QACf,OAAO;QACP;QACA,kBAAkB,IAAI;QACtB,gBAAgB,QAAQ,cAAc,IAAI,wKAAA,CAAA,wBAAqB;QAC/D,qCAAqC;QACrC,GAAG,OAAO;IACd;IACA,OAAO;QACH,OAAO,UAAU;YACb,OAAO,sBAAsB;gBACzB,GAAG,IAAI;gBACP,aAAa;YACjB;QACJ;QACA,YAAY,cAAc;YACtB,OAAO,sBAAsB;gBACzB,GAAG,IAAI;gBACP,YAAY;YAChB;QACJ;QACA,kBAAkB,kBAAkB;YAChC,OAAO;gBACH,GAAG,IAAI;gBACP,kBAAkB;YACtB;QACJ;QACA,eAAe,iBAAiB;YAC5B,OAAO,sBAAsB;gBACzB,GAAG,IAAI;gBACP,eAAe;YACnB;QACJ;IACJ;AACJ;AACA,SAAS,cAAc,IAAI;IACvB,OAAO,CAAC,OAAO;QACX,OAAO,sBAAsB;YACzB,cAAc;YACd,cAAc,UAAU,CAAC;YACzB,GAAG,IAAI;QACX;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/shared-schemas.js"],"sourcesContent":["import * as S from 'effect/Schema';\nimport { ValidContentDispositions, ValidACLs } from '@uploadthing/shared';\n\nconst ContentDispositionSchema = S.Literal(...ValidContentDispositions);\nconst ACLSchema = S.Literal(...ValidACLs);\n/**\n * Valid options for the `?actionType` query param\n */ const ActionType = S.Literal(\"upload\");\n/**\n * Valid options for the `uploadthing-hook` header\n * for requests coming from UT server\n */ const UploadThingHook = S.Literal(\"callback\", \"error\");\n/**\n * =============================================================================\n * =========================== Configuration ===================================\n * =============================================================================\n */ const DecodeString = S.transform(S.Uint8ArrayFromSelf, S.String, {\n    decode: (data)=>new TextDecoder().decode(data),\n    encode: (data)=>new TextEncoder().encode(data)\n});\nconst ParsedToken = S.Struct({\n    apiKey: S.Redacted(S.String.pipe(S.startsWith(\"sk_\"))),\n    appId: S.String,\n    regions: S.NonEmptyArray(S.String),\n    ingestHost: S.String.pipe(S.optionalWith({\n        default: ()=>\"ingest.uploadthing.com\"\n    }))\n});\nconst UploadThingToken = S.Uint8ArrayFromBase64.pipe(S.compose(DecodeString), S.compose(S.parseJson(ParsedToken)));\n/**\n * =============================================================================\n * ======================== File Type Hierarchy ===============================\n * =============================================================================\n */ /**\n * Properties from the web File object, this is what the client sends when initiating an upload\n */ class FileUploadData extends S.Class(\"FileUploadData\")({\n    name: S.String,\n    size: S.Number,\n    type: S.String,\n    lastModified: S.Number.pipe(S.optional)\n}) {\n}\n/**\n * `.middleware()` can add a customId to the incoming file data\n */ class FileUploadDataWithCustomId extends FileUploadData.extend(\"FileUploadDataWithCustomId\")({\n    customId: S.NullOr(S.String)\n}) {\n}\n/**\n * When files are uploaded, we get back\n * - a key\n * - URLs for the file\n * - the hash (md5-hex) of the uploaded file's contents\n */ class UploadedFileData extends FileUploadDataWithCustomId.extend(\"UploadedFileData\")({\n    key: S.String,\n    /**\n   * @deprecated\n   * This field will be removed in uploadthing v9. Use `ufsUrl` instead.\n   */ url: S.String,\n    /**\n   * @deprecated\n   * This field will be removed in uploadthing v9. Use `ufsUrl` instead.\n   */ appUrl: S.String,\n    ufsUrl: S.String,\n    fileHash: S.String\n}) {\n}\n/**\n * =============================================================================\n * ======================== Server Response Schemas ============================\n * =============================================================================\n */ class NewPresignedUrl extends S.Class(\"NewPresignedUrl\")({\n    url: S.String,\n    key: S.String,\n    customId: S.NullOr(S.String),\n    name: S.String\n}) {\n}\nclass MetadataFetchStreamPart extends S.Class(\"MetadataFetchStreamPart\")({\n    payload: S.String,\n    signature: S.String,\n    hook: UploadThingHook\n}) {\n}\nclass MetadataFetchResponse extends S.Class(\"MetadataFetchResponse\")({\n    ok: S.Boolean\n}) {\n}\nclass CallbackResultResponse extends S.Class(\"CallbackResultResponse\")({\n    ok: S.Boolean\n}) {\n}\n/**\n * =============================================================================\n * ======================== Client Action Payloads ============================\n * =============================================================================\n */ class UploadActionPayload extends S.Class(\"UploadActionPayload\")({\n    files: S.Array(FileUploadData),\n    input: S.Unknown\n}) {\n}\n\nexport { ACLSchema, ActionType, CallbackResultResponse, ContentDispositionSchema, FileUploadData, FileUploadDataWithCustomId, MetadataFetchResponse, MetadataFetchStreamPart, NewPresignedUrl, ParsedToken, UploadActionPayload, UploadThingHook, UploadThingToken, UploadedFileData };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;AAEA,MAAM,2BAA2B,kJAAE,OAAO,IAAI,0JAAA,CAAA,2BAAwB;AACtE,MAAM,YAAY,kJAAE,OAAO,IAAI,0JAAA,CAAA,YAAS;AACxC;;CAEC,GAAG,MAAM,aAAa,kJAAE,OAAO,CAAC;AACjC;;;CAGC,GAAG,MAAM,kBAAkB,kJAAE,OAAO,CAAC,YAAY;AAClD;;;;CAIC,GAAG,MAAM,eAAe,kJAAE,SAAS,CAAC,kJAAE,kBAAkB,EAAE,kJAAE,MAAM,EAAE;IACjE,QAAQ,CAAC,OAAO,IAAI,cAAc,MAAM,CAAC;IACzC,QAAQ,CAAC,OAAO,IAAI,cAAc,MAAM,CAAC;AAC7C;AACA,MAAM,cAAc,kJAAE,MAAM,CAAC;IACzB,QAAQ,kJAAE,QAAQ,CAAC,kJAAE,MAAM,CAAC,IAAI,CAAC,kJAAE,UAAU,CAAC;IAC9C,OAAO,kJAAE,MAAM;IACf,SAAS,kJAAE,aAAa,CAAC,kJAAE,MAAM;IACjC,YAAY,kJAAE,MAAM,CAAC,IAAI,CAAC,kJAAE,YAAY,CAAC;QACrC,SAAS,IAAI;IACjB;AACJ;AACA,MAAM,mBAAmB,kJAAE,oBAAoB,CAAC,IAAI,CAAC,kJAAE,OAAO,CAAC,eAAe,kJAAE,OAAO,CAAC,kJAAE,SAAS,CAAC;AACpG;;;;CAIC,GAAG;;CAEH,GAAG,MAAM,uBAAuB,kJAAE,KAAK,CAAC,kBAAkB;IACvD,MAAM,kJAAE,MAAM;IACd,MAAM,kJAAE,MAAM;IACd,MAAM,kJAAE,MAAM;IACd,cAAc,kJAAE,MAAM,CAAC,IAAI,CAAC,kJAAE,QAAQ;AAC1C;AACA;AACA;;CAEC,GAAG,MAAM,mCAAmC,eAAe,MAAM,CAAC,8BAA8B;IAC7F,UAAU,kJAAE,MAAM,CAAC,kJAAE,MAAM;AAC/B;AACA;AACA;;;;;CAKC,GAAG,MAAM,yBAAyB,2BAA2B,MAAM,CAAC,oBAAoB;IACrF,KAAK,kJAAE,MAAM;IACb;;;GAGD,GAAG,KAAK,kJAAE,MAAM;IACf;;;GAGD,GAAG,QAAQ,kJAAE,MAAM;IAClB,QAAQ,kJAAE,MAAM;IAChB,UAAU,kJAAE,MAAM;AACtB;AACA;AACA;;;;CAIC,GAAG,MAAM,wBAAwB,kJAAE,KAAK,CAAC,mBAAmB;IACzD,KAAK,kJAAE,MAAM;IACb,KAAK,kJAAE,MAAM;IACb,UAAU,kJAAE,MAAM,CAAC,kJAAE,MAAM;IAC3B,MAAM,kJAAE,MAAM;AAClB;AACA;AACA,MAAM,gCAAgC,kJAAE,KAAK,CAAC,2BAA2B;IACrE,SAAS,kJAAE,MAAM;IACjB,WAAW,kJAAE,MAAM;IACnB,MAAM;AACV;AACA;AACA,MAAM,8BAA8B,kJAAE,KAAK,CAAC,yBAAyB;IACjE,IAAI,kJAAE,OAAO;AACjB;AACA;AACA,MAAM,+BAA+B,kJAAE,KAAK,CAAC,0BAA0B;IACnE,IAAI,kJAAE,OAAO;AACjB;AACA;AACA;;;;CAIC,GAAG,MAAM,4BAA4B,kJAAE,KAAK,CAAC,uBAAuB;IACjE,OAAO,kJAAE,KAAK,CAAC;IACf,OAAO,kJAAE,OAAO;AACpB;AACA","ignoreList":[0]}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/config.js"],"sourcesContent":["import * as Config from 'effect/Config';\nimport * as ConfigProvider from 'effect/ConfigProvider';\nimport * as Effect from 'effect/Effect';\nimport * as S from 'effect/Schema';\nimport { filterDefinedObjectValues, UploadThingError } from '@uploadthing/shared';\nimport { UploadThingToken } from './shared-schemas.js';\n\nvar version = \"7.5.2\";\n\n/**\n * Merge in `import.meta.env` to the built-in `process.env` provider\n * Prefix keys with `UPLOADTHING_` so we can reference just the name.\n * @example\n * process.env.UPLOADTHING_TOKEN = \"foo\"\n * Config.string(\"token\"); // Config<\"foo\">\n */ const envProvider = ConfigProvider.fromEnv().pipe(ConfigProvider.orElse(()=>ConfigProvider.fromMap(new Map(Object.entries(filterDefinedObjectValues(// fuck this I give up. import.meta is a mistake, someone else can fix it\n    import.meta?.env ?? {}))), {\n        pathDelim: \"_\"\n    })), ConfigProvider.nested(\"uploadthing\"), ConfigProvider.constantCase);\n/**\n * Config provider that merges the options from the object\n * and environment variables prefixed with `UPLOADTHING_`.\n * @remarks Options take precedence over environment variables.\n */ const configProvider = (options)=>ConfigProvider.fromJson(options ?? {}).pipe(ConfigProvider.orElse(()=>envProvider));\nconst IsDevelopment = Config.boolean(\"isDev\").pipe(Config.orElse(()=>Config.succeed(typeof process !== \"undefined\" ? process.env.NODE_ENV : undefined).pipe(Config.map((_)=>_ === \"development\"))), Config.withDefault(false));\nconst UTToken = S.Config(\"token\", UploadThingToken).pipe(Effect.catchTags({\n    ConfigError: (e)=>new UploadThingError({\n            code: e._op === \"InvalidData\" ? \"INVALID_SERVER_CONFIG\" : \"MISSING_ENV\",\n            message: e._op === \"InvalidData\" ? \"Invalid token. A token is a base64 encoded JSON object matching { apiKey: string, appId: string, regions: string[] }.\" : \"Missing token. Please set the `UPLOADTHING_TOKEN` environment variable or provide a token manually through config.\",\n            cause: e\n        })\n}));\nconst ApiUrl = Config.string(\"apiUrl\").pipe(Config.withDefault(\"https://api.uploadthing.com\"), Config.mapAttempt((_)=>new URL(_)), Config.map((url)=>url.href.replace(/\\/$/, \"\")));\nconst IngestUrl = Effect.gen(function*() {\n    const { regions, ingestHost } = yield* UTToken;\n    const region = regions[0]; // Currently only support 1 region per app\n    return yield* Config.string(\"ingestUrl\").pipe(Config.withDefault(`https://${region}.${ingestHost}`), Config.mapAttempt((_)=>new URL(_)), Config.map((url)=>url.href.replace(/\\/$/, \"\")));\n});\nconst UtfsHost = Config.string(\"utfsHost\").pipe(Config.withDefault(\"utfs.io\"));\nconst UfsHost = Config.string(\"ufsHost\").pipe(Config.withDefault(\"ufs.sh\"));\n\nexport { ApiUrl, IngestUrl, IsDevelopment, version as UPLOADTHING_VERSION, UTToken, UfsHost, UtfsHost, configProvider };\n"],"names":[],"mappings":";;;;;;;;;;AACA;AAGA;AAJA;AAGA;AAEA;AAHA;;;;;;;;;;;;AAKA,IAAI,UAAU;AAEd;;;;;;CAMC,GAAG,MAAM,cAAc,0JAAe,OAAO,GAAG,IAAI,CAAC,0JAAe,MAAM,CAAC,IAAI,0JAAe,OAAO,CAAC,IAAI,IAAI,OAAO,OAAO,CAAC,CAAA,GAAA,0JAAA,CAAA,4BAAyB,AAAD,EAClJ,+BAAa,OAAO,CAAC,MAAM;QACvB,WAAW;IACf,KAAK,0JAAe,MAAM,CAAC,gBAAgB,0JAAe,YAAY;AAC1E;;;;CAIC,GAAG,MAAM,iBAAiB,CAAC,UAAU,0JAAe,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,0JAAe,MAAM,CAAC,IAAI;AAC5G,MAAM,gBAAgB,kJAAO,OAAO,CAAC,SAAS,IAAI,CAAC,kJAAO,MAAM,CAAC,IAAI,kJAAO,OAAO,CAAC,OAAO,YAAY,gEAAqC,WAAW,IAAI,CAAC,kJAAO,GAAG,CAAC,CAAC,IAAI,MAAM,kBAAkB,kJAAO,WAAW,CAAC;AACvN,MAAM,UAAU,kJAAE,MAAM,CAAC,SAAS,uKAAA,CAAA,mBAAgB,EAAE,IAAI,CAAC,kJAAO,SAAS,CAAC;IACtE,aAAa,CAAC,IAAI,IAAI,0JAAA,CAAA,mBAAgB,CAAC;YAC/B,MAAM,EAAE,GAAG,KAAK,gBAAgB,0BAA0B;YAC1D,SAAS,EAAE,GAAG,KAAK,gBAAgB,0HAA0H;YAC7J,OAAO;QACX;AACR;AACA,MAAM,SAAS,kJAAO,MAAM,CAAC,UAAU,IAAI,CAAC,kJAAO,WAAW,CAAC,gCAAgC,kJAAO,UAAU,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,kJAAO,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO;AAC7K,MAAM,YAAY,kJAAO,GAAG,CAAC;IACzB,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,OAAO;IACvC,MAAM,SAAS,OAAO,CAAC,EAAE,EAAE,0CAA0C;IACrE,OAAO,OAAO,kJAAO,MAAM,CAAC,aAAa,IAAI,CAAC,kJAAO,WAAW,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,YAAY,GAAG,kJAAO,UAAU,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,kJAAO,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO;AACvL;AACA,MAAM,WAAW,kJAAO,MAAM,CAAC,YAAY,IAAI,CAAC,kJAAO,WAAW,CAAC;AACnE,MAAM,UAAU,kJAAO,MAAM,CAAC,WAAW,IAAI,CAAC,kJAAO,WAAW,CAAC","ignoreList":[0]}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/logger.js"],"sourcesContent":["import * as Config from 'effect/Config';\nimport * as Effect from 'effect/Effect';\nimport * as Layer from 'effect/Layer';\nimport * as Logger from 'effect/Logger';\nimport * as LogLevel from 'effect/LogLevel';\nimport { UploadThingError } from '@uploadthing/shared';\nimport { IsDevelopment } from './config.js';\n\nconst withMinimalLogLevel = Config.logLevel(\"logLevel\").pipe(Config.withDefault(LogLevel.Info), Effect.andThen((level)=>Logger.minimumLogLevel(level)), Effect.tapError((e)=>Effect.logError(\"Invalid log level\").pipe(Effect.annotateLogs(\"error\", e))), Effect.catchTag(\"ConfigError\", (e)=>new UploadThingError({\n        code: \"INVALID_SERVER_CONFIG\",\n        message: \"Invalid server configuration\",\n        cause: e\n    })), Layer.unwrapEffect);\nconst LogFormat = Config.literal(\"json\", \"logFmt\", \"structured\", \"pretty\")(\"logFormat\");\nconst withLogFormat = Effect.gen(function*() {\n    const isDev = yield* IsDevelopment;\n    const logFormat = yield* LogFormat.pipe(Config.withDefault(isDev ? \"pretty\" : \"json\"));\n    return Logger[logFormat];\n}).pipe(Effect.catchTag(\"ConfigError\", (e)=>new UploadThingError({\n        code: \"INVALID_SERVER_CONFIG\",\n        message: \"Invalid server configuration\",\n        cause: e\n    })), Layer.unwrapEffect);\nconst logHttpClientResponse = (message, opts)=>{\n    const mixin = opts?.mixin ?? \"json\";\n    const level = LogLevel.fromLiteral(opts?.level ?? \"Debug\");\n    return (response)=>Effect.flatMap(mixin !== \"None\" ? response[mixin] : Effect.void, ()=>Effect.logWithLevel(level, `${message} (${response.status})`).pipe(Effect.annotateLogs(\"response\", response)));\n};\nconst logHttpClientError = (message)=>(err)=>err._tag === \"ResponseError\" ? logHttpClientResponse(message, {\n            level: \"Error\"\n        })(err.response) : Effect.logError(message).pipe(Effect.annotateLogs(\"error\", err));\n\nexport { LogFormat, logHttpClientError, logHttpClientResponse, withLogFormat, withMinimalLogLevel };\n"],"names":[],"mappings":";;;;;;;AAAA;AAIA;AAHA;AAEA;AAEA;AAHA;AAIA;;;;;;;;AAEA,MAAM,sBAAsB,kJAAO,QAAQ,CAAC,YAAY,IAAI,CAAC,kJAAO,WAAW,CAAC,oJAAS,IAAI,GAAG,kJAAO,OAAO,CAAC,CAAC,QAAQ,kJAAO,eAAe,CAAC,SAAS,kJAAO,QAAQ,CAAC,CAAC,IAAI,kJAAO,QAAQ,CAAC,qBAAqB,IAAI,CAAC,kJAAO,YAAY,CAAC,SAAS,MAAM,kJAAO,QAAQ,CAAC,eAAe,CAAC,IAAI,IAAI,0JAAA,CAAA,mBAAgB,CAAC;QAC3S,MAAM;QACN,SAAS;QACT,OAAO;IACX,KAAK,iJAAM,YAAY;AAC3B,MAAM,YAAY,kJAAO,OAAO,CAAC,QAAQ,UAAU,cAAc,UAAU;AAC3E,MAAM,gBAAgB,kJAAO,GAAG,CAAC;IAC7B,MAAM,QAAQ,OAAO,4JAAA,CAAA,gBAAa;IAClC,MAAM,YAAY,OAAO,UAAU,IAAI,CAAC,kJAAO,WAAW,CAAC,QAAQ,WAAW;IAC9E,OAAO,iJAAM,CAAC,UAAU;AAC5B,GAAG,IAAI,CAAC,kJAAO,QAAQ,CAAC,eAAe,CAAC,IAAI,IAAI,0JAAA,CAAA,mBAAgB,CAAC;QACzD,MAAM;QACN,SAAS;QACT,OAAO;IACX,KAAK,iJAAM,YAAY;AAC3B,MAAM,wBAAwB,CAAC,SAAS;IACpC,MAAM,QAAQ,MAAM,SAAS;IAC7B,MAAM,QAAQ,oJAAS,WAAW,CAAC,MAAM,SAAS;IAClD,OAAO,CAAC,WAAW,kJAAO,OAAO,CAAC,UAAU,SAAS,QAAQ,CAAC,MAAM,GAAG,kJAAO,IAAI,EAAE,IAAI,kJAAO,YAAY,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,SAAS,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kJAAO,YAAY,CAAC,YAAY;AAC/L;AACA,MAAM,qBAAqB,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,KAAK,kBAAkB,sBAAsB,SAAS;YAC/F,OAAO;QACX,GAAG,IAAI,QAAQ,IAAI,kJAAO,QAAQ,CAAC,SAAS,IAAI,CAAC,kJAAO,YAAY,CAAC,SAAS","ignoreList":[0]}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/runtime.js"],"sourcesContent":["import { FetchHttpClient, Headers } from '@effect/platform';\nimport * as FiberRef from 'effect/FiberRef';\nimport * as Layer from 'effect/Layer';\nimport * as ManagedRuntime from 'effect/ManagedRuntime';\nimport { configProvider } from './config.js';\nimport { withLogFormat, withMinimalLogLevel } from './logger.js';\n\nconst makeRuntime = (fetch, config)=>{\n    const fetchHttpClient = Layer.provideMerge(FetchHttpClient.layer, Layer.succeed(FetchHttpClient.Fetch, fetch));\n    const withRedactedHeaders = Layer.effectDiscard(FiberRef.update(Headers.currentRedactedNames, (_)=>_.concat([\n            \"x-uploadthing-api-key\"\n        ])));\n    const layer = Layer.provide(Layer.mergeAll(withLogFormat, withMinimalLogLevel, fetchHttpClient, withRedactedHeaders), Layer.setConfigProvider(configProvider(config)));\n    return ManagedRuntime.make(layer);\n};\n\nexport { makeRuntime };\n"],"names":[],"mappings":";;;AAEA;AAFA;AACA;AADA;AAKA;AADA;AADA;;;;;;;AAIA,MAAM,cAAc,CAAC,OAAO;IACxB,MAAM,kBAAkB,iJAAM,YAAY,CAAC,mNAAA,CAAA,kBAAe,CAAC,KAAK,EAAE,iJAAM,OAAO,CAAC,mNAAA,CAAA,kBAAe,CAAC,KAAK,EAAE;IACvG,MAAM,sBAAsB,iJAAM,aAAa,CAAC,oJAAS,MAAM,CAAC,mMAAA,CAAA,UAAO,CAAC,oBAAoB,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;YACpG;SACH;IACL,MAAM,QAAQ,iJAAM,OAAO,CAAC,iJAAM,QAAQ,CAAC,4JAAA,CAAA,gBAAa,EAAE,4JAAA,CAAA,sBAAmB,EAAE,iBAAiB,sBAAsB,iJAAM,iBAAiB,CAAC,CAAA,GAAA,4JAAA,CAAA,iBAAc,AAAD,EAAE;IAC7J,OAAO,0JAAe,IAAI,CAAC;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/route-config.js"],"sourcesContent":["import * as Data from 'effect/Data';\nimport * as Effect from 'effect/Effect';\nimport { matchFileType, objectKeys, InvalidRouteConfigError, fileSizeToBytes, UploadThingError, fillInputRouteConfig, bytesToFileSize } from '@uploadthing/shared';\n\nclass FileSizeMismatch extends Data.Error {\n    constructor(type, max, actual){\n        const reason = `You uploaded a ${type} file that was ${bytesToFileSize(actual)}, but the limit for that type is ${max}`;\n        super({\n            reason\n        }), this._tag = \"FileSizeMismatch\", this.name = \"FileSizeMismatchError\";\n    }\n}\nclass FileCountMismatch extends Data.Error {\n    constructor(type, boundtype, bound, actual){\n        const reason = `You uploaded ${actual} file(s) of type '${type}', but the ${boundtype} for that type is ${bound}`;\n        super({\n            reason\n        }), this._tag = \"FileCountMismatch\", this.name = \"FileCountMismatchError\";\n    }\n}\n// Verify that the uploaded files doesn't violate the route config,\n// e.g. uploading more videos than allowed, or a file that is larger than allowed.\n// This is double-checked on infra side, but we want to fail early to avoid network latency.\nconst assertFilesMeetConfig = (files, routeConfig)=>Effect.gen(function*() {\n        const counts = {};\n        for (const file of files){\n            const type = yield* matchFileType(file, objectKeys(routeConfig));\n            counts[type] = (counts[type] ?? 0) + 1;\n            const sizeLimit = routeConfig[type]?.maxFileSize;\n            if (!sizeLimit) {\n                return yield* new InvalidRouteConfigError(type, \"maxFileSize\");\n            }\n            const sizeLimitBytes = yield* fileSizeToBytes(sizeLimit);\n            if (file.size > sizeLimitBytes) {\n                return yield* new FileSizeMismatch(type, sizeLimit, file.size);\n            }\n        }\n        for(const _key in counts){\n            const key = _key;\n            const config = routeConfig[key];\n            if (!config) return yield* new InvalidRouteConfigError(key);\n            const count = counts[key];\n            const min = config.minFileCount;\n            const max = config.maxFileCount;\n            if (min > max) {\n                return yield* new UploadThingError({\n                    code: \"BAD_REQUEST\",\n                    message: \"Invalid config during file count - minFileCount > maxFileCount\",\n                    cause: `minFileCount must be less than maxFileCount for key ${key}. got: ${min} > ${max}`\n                });\n            }\n            if (count != null && count < min) {\n                return yield* new FileCountMismatch(key, \"minimum\", min, count);\n            }\n            if (count != null && count > max) {\n                return yield* new FileCountMismatch(key, \"maximum\", max, count);\n            }\n        }\n        return null;\n    });\nconst extractRouterConfig = (router)=>Effect.forEach(objectKeys(router), (slug)=>Effect.map(fillInputRouteConfig(router[slug].routerConfig), (config)=>({\n                slug,\n                config\n            })));\n\nexport { assertFilesMeetConfig, extractRouterConfig };\n"],"names":[],"mappings":";;;;AAEA;AAFA;AACA;;;;AAGA,MAAM,yBAAyB,gJAAK,KAAK;IACrC,YAAY,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC;QAC1B,MAAM,SAAS,CAAC,eAAe,EAAE,KAAK,eAAe,EAAE,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,iCAAiC,EAAE,KAAK;QACvH,KAAK,CAAC;YACF;QACJ,IAAI,IAAI,CAAC,IAAI,GAAG,oBAAoB,IAAI,CAAC,IAAI,GAAG;IACpD;AACJ;AACA,MAAM,0BAA0B,gJAAK,KAAK;IACtC,YAAY,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC;QACvC,MAAM,SAAS,CAAC,aAAa,EAAE,OAAO,kBAAkB,EAAE,KAAK,WAAW,EAAE,UAAU,kBAAkB,EAAE,OAAO;QACjH,KAAK,CAAC;YACF;QACJ,IAAI,IAAI,CAAC,IAAI,GAAG,qBAAqB,IAAI,CAAC,IAAI,GAAG;IACrD;AACJ;AACA,mEAAmE;AACnE,kFAAkF;AAClF,4FAA4F;AAC5F,MAAM,wBAAwB,CAAC,OAAO,cAAc,kJAAO,GAAG,CAAC;QACvD,MAAM,SAAS,CAAC;QAChB,KAAK,MAAM,QAAQ,MAAM;YACrB,MAAM,OAAO,OAAO,CAAA,GAAA,0JAAA,CAAA,gBAAa,AAAD,EAAE,MAAM,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAE;YACnD,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI;YACrC,MAAM,YAAY,WAAW,CAAC,KAAK,EAAE;YACrC,IAAI,CAAC,WAAW;gBACZ,OAAO,OAAO,IAAI,0JAAA,CAAA,0BAAuB,CAAC,MAAM;YACpD;YACA,MAAM,iBAAiB,OAAO,CAAA,GAAA,0JAAA,CAAA,kBAAe,AAAD,EAAE;YAC9C,IAAI,KAAK,IAAI,GAAG,gBAAgB;gBAC5B,OAAO,OAAO,IAAI,iBAAiB,MAAM,WAAW,KAAK,IAAI;YACjE;QACJ;QACA,IAAI,MAAM,QAAQ,OAAO;YACrB,MAAM,MAAM;YACZ,MAAM,SAAS,WAAW,CAAC,IAAI;YAC/B,IAAI,CAAC,QAAQ,OAAO,OAAO,IAAI,0JAAA,CAAA,0BAAuB,CAAC;YACvD,MAAM,QAAQ,MAAM,CAAC,IAAI;YACzB,MAAM,MAAM,OAAO,YAAY;YAC/B,MAAM,MAAM,OAAO,YAAY;YAC/B,IAAI,MAAM,KAAK;gBACX,OAAO,OAAO,IAAI,0JAAA,CAAA,mBAAgB,CAAC;oBAC/B,MAAM;oBACN,SAAS;oBACT,OAAO,CAAC,oDAAoD,EAAE,IAAI,OAAO,EAAE,IAAI,GAAG,EAAE,KAAK;gBAC7F;YACJ;YACA,IAAI,SAAS,QAAQ,QAAQ,KAAK;gBAC9B,OAAO,OAAO,IAAI,kBAAkB,KAAK,WAAW,KAAK;YAC7D;YACA,IAAI,SAAS,QAAQ,QAAQ,KAAK;gBAC9B,OAAO,OAAO,IAAI,kBAAkB,KAAK,WAAW,KAAK;YAC7D;QACJ;QACA,OAAO;IACX;AACJ,MAAM,sBAAsB,CAAC,SAAS,kJAAO,OAAO,CAAC,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAE,SAAS,CAAC,OAAO,kJAAO,GAAG,CAAC,CAAA,GAAA,0JAAA,CAAA,uBAAoB,AAAD,EAAE,MAAM,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,SAAS,CAAC;gBACxI;gBACA;YACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/deprecations.js"],"sourcesContent":["const logDeprecationWarning = (message)=>{\n    // eslint-disable-next-line no-console\n    console.warn(`⚠️ [uploadthing][deprecated] ${message}`);\n};\n\nexport { logDeprecationWarning };\n"],"names":[],"mappings":";;;AAAA,MAAM,wBAAwB,CAAC;IAC3B,sCAAsC;IACtC,QAAQ,IAAI,CAAC,CAAC,6BAA6B,EAAE,SAAS;AAC1D","ignoreList":[0]}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/types.js"],"sourcesContent":["/**\n * Marker used to append a `customId` to the incoming file data in `.middleware()`\n * @example\n * ```ts\n * .middleware((opts) => {\n *   return {\n *     [UTFiles]: opts.files.map((file) => ({\n *       ...file,\n *       customId: generateId(),\n *     }))\n *   };\n * })\n * ```\n */ const UTFiles = Symbol(\"uploadthing-custom-id-symbol\");\n\nexport { UTFiles };\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;CAaC;;;AAAG,MAAM,UAAU,OAAO","ignoreList":[0]}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/parser.js"],"sourcesContent":["import * as Cause from 'effect/Cause';\nimport * as Data from 'effect/Data';\nimport * as Runtime from 'effect/Runtime';\nimport * as Schema from 'effect/Schema';\n\nclass ParserError extends Data.TaggedError(\"ParserError\") {\n    constructor(...args){\n        super(...args), this.message = \"Input validation failed. The original error with it's validation issues is in the error cause.\";\n    }\n}\nfunction getParseFn(parser) {\n    if (\"parseAsync\" in parser && typeof parser.parseAsync === \"function\") {\n        /**\n     * Zod\n     * TODO (next major): Consider wrapping ZodError in ParserError\n     */ return parser.parseAsync;\n    }\n    if (Schema.isSchema(parser)) {\n        /**\n     * Effect Schema\n     */ return (value)=>Schema.decodeUnknownPromise(parser)(value).catch((error)=>{\n                throw new ParserError({\n                    cause: Cause.squash(error[Runtime.FiberFailureCauseId])\n                });\n            });\n    }\n    if (\"~standard\" in parser) {\n        /**\n     * Standard Schema\n     * TODO (next major): Consider moving this to the top of the function\n     */ return async (value)=>{\n            const result = await parser[\"~standard\"].validate(value);\n            if (result.issues) {\n                throw new ParserError({\n                    cause: result.issues\n                });\n            }\n            return result.value;\n        };\n    }\n    throw new Error(\"Invalid parser\");\n}\n\nexport { ParserError, getParseFn };\n"],"names":[],"mappings":";;;;AACA;AAEA;AAHA;AAEA;;;;;AAGA,MAAM,oBAAoB,gJAAK,WAAW,CAAC;IACvC,YAAY,GAAG,IAAI,CAAC;QAChB,KAAK,IAAI,OAAO,IAAI,CAAC,OAAO,GAAG;IACnC;AACJ;AACA,SAAS,WAAW,MAAM;IACtB,IAAI,gBAAgB,UAAU,OAAO,OAAO,UAAU,KAAK,YAAY;QACnE;;;KAGH,GAAG,OAAO,OAAO,UAAU;IAC5B;IACA,IAAI,kJAAO,QAAQ,CAAC,SAAS;QACzB;;KAEH,GAAG,OAAO,CAAC,QAAQ,kJAAO,oBAAoB,CAAC,QAAQ,OAAO,KAAK,CAAC,CAAC;gBAC1D,MAAM,IAAI,YAAY;oBAClB,OAAO,iJAAM,MAAM,CAAC,KAAK,CAAC,mJAAQ,mBAAmB,CAAC;gBAC1D;YACJ;IACR;IACA,IAAI,eAAe,QAAQ;QACvB;;;KAGH,GAAG,OAAO,OAAO;YACV,MAAM,SAAS,MAAM,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;YAClD,IAAI,OAAO,MAAM,EAAE;gBACf,MAAM,IAAI,YAAY;oBAClB,OAAO,OAAO,MAAM;gBACxB;YACJ;YACA,OAAO,OAAO,KAAK;QACvB;IACJ;IACA,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/jsonl.js"],"sourcesContent":["import * as Effect from 'effect/Effect';\nimport * as S from 'effect/Schema';\nimport * as Stream from 'effect/Stream';\n\nconst handleJsonLineStream = (schema, onChunk)=>(stream)=>{\n        let buf = \"\";\n        return stream.pipe(Stream.decodeText(), Stream.mapEffect((chunk)=>Effect.gen(function*() {\n                buf += chunk;\n                // Scan buffer for newlines\n                const parts = buf.split(\"\\n\");\n                const validChunks = [];\n                for (const part of parts){\n                    try {\n                        // Attempt to parse chunk as JSON\n                        validChunks.push(JSON.parse(part));\n                        // Advance buffer if parsing succeeded\n                        buf = buf.slice(part.length + 1);\n                    } catch  {\n                    //\n                    }\n                }\n                yield* Effect.logDebug(\"Received chunks\").pipe(Effect.annotateLogs(\"chunk\", chunk), Effect.annotateLogs(\"parsedChunks\", validChunks), Effect.annotateLogs(\"buf\", buf));\n                return validChunks;\n            })), Stream.mapEffect(S.decodeUnknown(S.Array(schema))), Stream.mapEffect(Effect.forEach((part)=>onChunk(part))), Stream.runDrain, Effect.withLogSpan(\"handleJsonLineStream\"));\n    };\n\nexport { handleJsonLineStream };\n"],"names":[],"mappings":";;;AAEA;AAFA;AACA;;;;AAGA,MAAM,uBAAuB,CAAC,QAAQ,UAAU,CAAC;QACzC,IAAI,MAAM;QACV,OAAO,OAAO,IAAI,CAAC,kJAAO,UAAU,IAAI,kJAAO,SAAS,CAAC,CAAC,QAAQ,kJAAO,GAAG,CAAC;gBACrE,OAAO;gBACP,2BAA2B;gBAC3B,MAAM,QAAQ,IAAI,KAAK,CAAC;gBACxB,MAAM,cAAc,EAAE;gBACtB,KAAK,MAAM,QAAQ,MAAM;oBACrB,IAAI;wBACA,iCAAiC;wBACjC,YAAY,IAAI,CAAC,KAAK,KAAK,CAAC;wBAC5B,sCAAsC;wBACtC,MAAM,IAAI,KAAK,CAAC,KAAK,MAAM,GAAG;oBAClC,EAAE,OAAO;oBACT,EAAE;oBACF;gBACJ;gBACA,OAAO,kJAAO,QAAQ,CAAC,mBAAmB,IAAI,CAAC,kJAAO,YAAY,CAAC,SAAS,QAAQ,kJAAO,YAAY,CAAC,gBAAgB,cAAc,kJAAO,YAAY,CAAC,OAAO;gBACjK,OAAO;YACX,KAAK,kJAAO,SAAS,CAAC,kJAAE,aAAa,CAAC,kJAAE,KAAK,CAAC,WAAW,kJAAO,SAAS,CAAC,kJAAO,OAAO,CAAC,CAAC,OAAO,QAAQ,SAAS,kJAAO,QAAQ,EAAE,kJAAO,WAAW,CAAC;IAC9J","ignoreList":[0]}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/dist/_internal/handler.js"],"sourcesContent":["import { HttpApp, HttpServerResponse, HttpServerRequest, HttpRouter, HttpClient, HttpClientRequest, HttpClientResponse, HttpBody } from '@effect/platform';\nimport * as Config from 'effect/Config';\nimport * as Context from 'effect/Context';\nimport * as Effect from 'effect/Effect';\nimport * as Match from 'effect/Match';\nimport * as Redacted from 'effect/Redacted';\nimport * as Schema from 'effect/Schema';\nimport { UploadThingError, getStatusCodeFromError, verifySignature, fillInputRouteConfig, matchFileType, objectKeys, generateKey, generateSignedURL } from '@uploadthing/shared';\nimport { IsDevelopment, UTToken, IngestUrl } from './config.js';\nimport { logDeprecationWarning } from './deprecations.js';\nimport { formatError } from './error-formatter.js';\nimport { handleJsonLineStream } from './jsonl.js';\nimport { logHttpClientError, logHttpClientResponse } from './logger.js';\nimport { getParseFn } from './parser.js';\nimport { extractRouterConfig, assertFilesMeetConfig } from './route-config.js';\nimport { makeRuntime } from './runtime.js';\nimport { UploadThingHook, ActionType, UploadedFileData, CallbackResultResponse, UploadActionPayload, MetadataFetchStreamPart, MetadataFetchResponse } from './shared-schemas.js';\nimport { UTFiles } from './types.js';\n\nvar version = \"7.5.2\";\n\nclass AdapterArguments extends Context.Tag(\"uploadthing/AdapterArguments\")() {\n}\nconst makeAdapterHandler = (makeAdapterArgs, toRequest, opts, beAdapter)=>{\n    const managed = makeRuntime(opts.config?.fetch, opts.config);\n    const handle = Effect.promise(()=>managed.runtime().then(HttpApp.toWebHandlerRuntime));\n    const app = (...args)=>Effect.map(Effect.promise(()=>managed.runPromise(createRequestHandler(opts, beAdapter))), Effect.provideServiceEffect(AdapterArguments, makeAdapterArgs(...args)));\n    return async (...args)=>{\n        const result = await handle.pipe(Effect.ap(app(...args)), Effect.ap(toRequest(...args)), Effect.withLogSpan(\"requestHandler\"), managed.runPromise);\n        return result;\n    };\n};\nconst createRequestHandler = (opts, beAdapter)=>Effect.gen(function*() {\n        const isDevelopment = yield* IsDevelopment;\n        const routerConfig = yield* extractRouterConfig(opts.router);\n        const handleDaemon = (()=>{\n            if (opts.config?.handleDaemonPromise) {\n                return opts.config.handleDaemonPromise;\n            }\n            return isDevelopment ? \"void\" : \"await\";\n        })();\n        if (isDevelopment && handleDaemon === \"await\") {\n            return yield* new UploadThingError({\n                code: \"INVALID_SERVER_CONFIG\",\n                message: 'handleDaemonPromise: \"await\" is forbidden in development.'\n            });\n        }\n        const GET = Effect.gen(function*() {\n            return yield* HttpServerResponse.json(routerConfig);\n        });\n        const POST = Effect.gen(function*() {\n            const { \"uploadthing-hook\": uploadthingHook, \"x-uploadthing-package\": fePackage, \"x-uploadthing-version\": clientVersion } = yield* HttpServerRequest.schemaHeaders(Schema.Struct({\n                \"uploadthing-hook\": UploadThingHook.pipe(Schema.optional),\n                \"x-uploadthing-package\": Schema.String.pipe(Schema.optionalWith({\n                    default: ()=>\"unknown\"\n                })),\n                \"x-uploadthing-version\": Schema.String.pipe(Schema.optionalWith({\n                    default: ()=>version\n                }))\n            }));\n            if (clientVersion !== version) {\n                const serverVersion = version;\n                yield* Effect.logWarning(\"Client version mismatch. Things may not work as expected, please sync your versions to ensure compatibility.\").pipe(Effect.annotateLogs({\n                    clientVersion,\n                    serverVersion\n                }));\n            }\n            const { slug, actionType } = yield* HttpRouter.schemaParams(Schema.Struct({\n                actionType: ActionType.pipe(Schema.optional),\n                slug: Schema.String\n            }));\n            const uploadable = opts.router[slug];\n            if (!uploadable) {\n                const msg = `No file route found for slug ${slug}`;\n                yield* Effect.logError(msg);\n                return yield* new UploadThingError({\n                    code: \"NOT_FOUND\",\n                    message: msg\n                });\n            }\n            const { body, fiber } = yield* Match.value({\n                actionType,\n                uploadthingHook\n            }).pipe(Match.when({\n                actionType: \"upload\",\n                uploadthingHook: undefined\n            }, ()=>handleUploadAction({\n                    uploadable,\n                    fePackage,\n                    beAdapter,\n                    slug\n                })), Match.when({\n                actionType: undefined,\n                uploadthingHook: \"callback\"\n            }, ()=>handleCallbackRequest({\n                    uploadable,\n                    fePackage,\n                    beAdapter\n                })), Match.when({\n                actionType: undefined,\n                uploadthingHook: \"error\"\n            }, ()=>handleErrorRequest({\n                    uploadable\n                })), Match.orElse(()=>Effect.succeed({\n                    body: null,\n                    fiber: null\n                })));\n            if (fiber) {\n                yield* Effect.logDebug(\"Running fiber as daemon\").pipe(Effect.annotateLogs(\"handleDaemon\", handleDaemon));\n                if (handleDaemon === \"void\") ; else if (handleDaemon === \"await\") {\n                    yield* fiber.await;\n                } else if (typeof handleDaemon === \"function\") {\n                    handleDaemon(Effect.runPromise(fiber.await));\n                }\n            }\n            yield* Effect.logDebug(\"Sending response\").pipe(Effect.annotateLogs(\"body\", body));\n            return yield* HttpServerResponse.json(body);\n        }).pipe(Effect.catchTags({\n            ParseError: (e)=>HttpServerResponse.json(formatError(new UploadThingError({\n                    code: \"BAD_REQUEST\",\n                    message: \"Invalid input\",\n                    cause: e.message\n                }), opts.router), {\n                    status: 400\n                }),\n            UploadThingError: (e)=>// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                HttpServerResponse.json(formatError(e, opts.router), {\n                    status: getStatusCodeFromError(e)\n                })\n        }));\n        const appendResponseHeaders = Effect.map(HttpServerResponse.setHeader(\"x-uploadthing-version\", version));\n        return HttpRouter.empty.pipe(HttpRouter.get(\"*\", GET), HttpRouter.post(\"*\", POST), HttpRouter.use(appendResponseHeaders));\n    }).pipe(Effect.withLogSpan(\"createRequestHandler\"));\nconst handleErrorRequest = (opts)=>Effect.gen(function*() {\n        const { uploadable } = opts;\n        const request = yield* HttpServerRequest.HttpServerRequest;\n        const { apiKey } = yield* UTToken;\n        const verified = yield* verifySignature((yield* request.text), request.headers[\"x-uploadthing-signature\"] ?? null, apiKey);\n        yield* Effect.logDebug(`Signature verified: ${verified}`);\n        if (!verified) {\n            yield* Effect.logError(\"Invalid signature\");\n            return yield* new UploadThingError({\n                code: \"BAD_REQUEST\",\n                message: \"Invalid signature\"\n            });\n        }\n        const requestInput = yield* HttpServerRequest.schemaBodyJson(Schema.Struct({\n            fileKey: Schema.String,\n            error: Schema.String\n        }));\n        yield* Effect.logDebug(\"Handling error callback request with input:\").pipe(Effect.annotateLogs(\"json\", requestInput));\n        const adapterArgs = yield* AdapterArguments;\n        const fiber = yield* Effect.tryPromise({\n            try: async ()=>uploadable.onUploadError({\n                    ...adapterArgs,\n                    error: new UploadThingError({\n                        code: \"UPLOAD_FAILED\",\n                        message: `Upload failed for ${requestInput.fileKey}: ${requestInput.error}`\n                    }),\n                    fileKey: requestInput.fileKey\n                }),\n            catch: (error)=>new UploadThingError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"Failed to run onUploadError\",\n                    cause: error\n                })\n        }).pipe(Effect.tapError((error)=>Effect.logError(\"Failed to run onUploadError. You probably shouldn't be throwing errors here.\").pipe(Effect.annotateLogs(\"error\", error)))).pipe(Effect.ignoreLogged, Effect.forkDaemon);\n        return {\n            body: null,\n            fiber\n        };\n    }).pipe(Effect.withLogSpan(\"handleErrorRequest\"));\nconst handleCallbackRequest = (opts)=>Effect.gen(function*() {\n        const { uploadable, fePackage, beAdapter } = opts;\n        const request = yield* HttpServerRequest.HttpServerRequest;\n        const { apiKey } = yield* UTToken;\n        const verified = yield* verifySignature((yield* request.text), request.headers[\"x-uploadthing-signature\"] ?? null, apiKey);\n        yield* Effect.logDebug(`Signature verified: ${verified}`);\n        if (!verified) {\n            yield* Effect.logError(\"Invalid signature\");\n            return yield* new UploadThingError({\n                code: \"BAD_REQUEST\",\n                message: \"Invalid signature\"\n            });\n        }\n        const requestInput = yield* HttpServerRequest.schemaBodyJson(Schema.Struct({\n            status: Schema.String,\n            file: UploadedFileData,\n            metadata: Schema.Record({\n                key: Schema.String,\n                value: Schema.Unknown\n            })\n        }));\n        yield* Effect.logDebug(\"Handling callback request with input:\").pipe(Effect.annotateLogs(\"json\", requestInput));\n        /**\n     * Run `.onUploadComplete` as a daemon to prevent the\n     * request from UT to potentially timeout.\n     */ const fiber = yield* Effect.gen(function*() {\n            const adapterArgs = yield* AdapterArguments;\n            const serverData = yield* Effect.tryPromise({\n                try: async ()=>uploadable.onUploadComplete({\n                        ...adapterArgs,\n                        file: {\n                            ...requestInput.file,\n                            get url () {\n                                logDeprecationWarning(\"`file.url` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n                                return requestInput.file.url;\n                            },\n                            get appUrl () {\n                                logDeprecationWarning(\"`file.appUrl` is deprecated and will be removed in uploadthing v9. Use `file.ufsUrl` instead.\");\n                                return requestInput.file.appUrl;\n                            }\n                        },\n                        metadata: requestInput.metadata\n                    }),\n                catch: (error)=>new UploadThingError({\n                        code: \"INTERNAL_SERVER_ERROR\",\n                        message: \"Failed to run onUploadComplete. You probably shouldn't be throwing errors here.\",\n                        cause: error\n                    })\n            });\n            const payload = {\n                fileKey: requestInput.file.key,\n                callbackData: serverData ?? null\n            };\n            yield* Effect.logDebug(\"'onUploadComplete' callback finished. Sending response to UploadThing:\").pipe(Effect.annotateLogs(\"callbackData\", payload));\n            const baseUrl = yield* IngestUrl;\n            const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.filterStatusOk);\n            yield* HttpClientRequest.post(`/callback-result`).pipe(HttpClientRequest.prependUrl(baseUrl), HttpClientRequest.setHeaders({\n                \"x-uploadthing-api-key\": Redacted.value(apiKey),\n                \"x-uploadthing-version\": version,\n                \"x-uploadthing-be-adapter\": beAdapter,\n                \"x-uploadthing-fe-package\": fePackage\n            }), HttpClientRequest.bodyJson(payload), Effect.flatMap(httpClient.execute), Effect.tapError(logHttpClientError(\"Failed to register callback result\")), Effect.flatMap(HttpClientResponse.schemaBodyJson(CallbackResultResponse)), Effect.tap(Effect.log(\"Sent callback result to UploadThing\")), Effect.scoped);\n        }).pipe(Effect.ignoreLogged, Effect.forkDaemon);\n        return {\n            body: null,\n            fiber\n        };\n    }).pipe(Effect.withLogSpan(\"handleCallbackRequest\"));\nconst runRouteMiddleware = (opts)=>Effect.gen(function*() {\n        const { json: { files, input }, uploadable } = opts;\n        yield* Effect.logDebug(\"Running middleware\");\n        const adapterArgs = yield* AdapterArguments;\n        const metadata = yield* Effect.tryPromise({\n            try: async ()=>uploadable.middleware({\n                    ...adapterArgs,\n                    input,\n                    files\n                }),\n            catch: (error)=>error instanceof UploadThingError ? error : new UploadThingError({\n                    code: \"INTERNAL_SERVER_ERROR\",\n                    message: \"Failed to run middleware\",\n                    cause: error\n                })\n        });\n        if (metadata[UTFiles] && metadata[UTFiles].length !== files.length) {\n            const msg = `Expected files override to have the same length as original files, got ${metadata[UTFiles].length} but expected ${files.length}`;\n            yield* Effect.logError(msg);\n            return yield* new UploadThingError({\n                code: \"BAD_REQUEST\",\n                message: \"Files override must have the same length as files\",\n                cause: msg\n            });\n        }\n        // Attach customIds from middleware to the files\n        const filesWithCustomIds = yield* Effect.forEach(files, (file, idx)=>Effect.gen(function*() {\n                const theirs = metadata[UTFiles]?.[idx];\n                if (theirs && theirs.size !== file.size) {\n                    yield* Effect.logWarning(\"File size mismatch. Reverting to original size\");\n                }\n                return {\n                    name: theirs?.name ?? file.name,\n                    size: file.size,\n                    type: file.type,\n                    customId: theirs?.customId,\n                    lastModified: theirs?.lastModified ?? Date.now()\n                };\n            }));\n        return {\n            metadata,\n            filesWithCustomIds\n        };\n    }).pipe(Effect.withLogSpan(\"runRouteMiddleware\"));\nconst handleUploadAction = (opts)=>Effect.gen(function*() {\n        const httpClient = (yield* HttpClient.HttpClient).pipe(HttpClient.filterStatusOk);\n        const { uploadable, fePackage, beAdapter, slug } = opts;\n        const json = yield* HttpServerRequest.schemaBodyJson(UploadActionPayload);\n        yield* Effect.logDebug(\"Handling upload request\").pipe(Effect.annotateLogs(\"json\", json));\n        // validate the input\n        yield* Effect.logDebug(\"Parsing user input\");\n        const parsedInput = yield* Effect.tryPromise({\n            try: ()=>getParseFn(uploadable.inputParser)(json.input),\n            catch: (error)=>new UploadThingError({\n                    code: \"BAD_REQUEST\",\n                    message: \"Invalid input\",\n                    cause: error\n                })\n        });\n        yield* Effect.logDebug(\"Input parsed successfully\").pipe(Effect.annotateLogs(\"input\", parsedInput));\n        const { metadata, filesWithCustomIds } = yield* runRouteMiddleware({\n            json: {\n                input: parsedInput,\n                files: json.files\n            },\n            uploadable\n        });\n        yield* Effect.logDebug(\"Parsing route config\").pipe(Effect.annotateLogs(\"routerConfig\", uploadable.routerConfig));\n        const parsedConfig = yield* fillInputRouteConfig(uploadable.routerConfig).pipe(Effect.catchTag(\"InvalidRouteConfig\", (err)=>new UploadThingError({\n                code: \"BAD_REQUEST\",\n                message: \"Invalid route config\",\n                cause: err\n            })));\n        yield* Effect.logDebug(\"Route config parsed successfully\").pipe(Effect.annotateLogs(\"routeConfig\", parsedConfig));\n        yield* Effect.logDebug(\"Validating files meet the config requirements\").pipe(Effect.annotateLogs(\"files\", json.files));\n        yield* assertFilesMeetConfig(json.files, parsedConfig).pipe(Effect.mapError((e)=>new UploadThingError({\n                code: \"BAD_REQUEST\",\n                message: `Invalid config: ${e._tag}`,\n                cause: \"reason\" in e ? e.reason : e.message\n            })));\n        yield* Effect.logDebug(\"Files validated.\");\n        const fileUploadRequests = yield* Effect.forEach(filesWithCustomIds, (file)=>Effect.map(matchFileType(file, objectKeys(parsedConfig)), (type)=>({\n                    name: file.name,\n                    size: file.size,\n                    type: file.type || type,\n                    lastModified: file.lastModified,\n                    customId: file.customId,\n                    contentDisposition: parsedConfig[type]?.contentDisposition ?? \"inline\",\n                    acl: parsedConfig[type]?.acl\n                }))).pipe(Effect.catchTags({\n            /** Shouldn't happen since config is validated above so just dying is fine I think */ InvalidFileType: (e)=>Effect.die(e),\n            UnknownFileType: (e)=>Effect.die(e)\n        }));\n        const routeOptions = uploadable.routeOptions;\n        const { apiKey, appId } = yield* UTToken;\n        const ingestUrl = yield* IngestUrl;\n        const isDev = yield* IsDevelopment;\n        yield* Effect.logDebug(\"Generating presigned URLs\").pipe(Effect.annotateLogs(\"fileUploadRequests\", fileUploadRequests), Effect.annotateLogs(\"ingestUrl\", ingestUrl));\n        const presignedUrls = yield* Effect.forEach(fileUploadRequests, (file)=>Effect.gen(function*() {\n                const key = yield* generateKey(file, appId, routeOptions.getFileHashParts);\n                const url = yield* generateSignedURL(`${ingestUrl}/${key}`, apiKey, {\n                    ttlInSeconds: routeOptions.presignedURLTTL,\n                    data: {\n                        \"x-ut-identifier\": appId,\n                        \"x-ut-file-name\": file.name,\n                        \"x-ut-file-size\": file.size,\n                        \"x-ut-file-type\": file.type,\n                        \"x-ut-slug\": slug,\n                        \"x-ut-custom-id\": file.customId,\n                        \"x-ut-content-disposition\": file.contentDisposition,\n                        \"x-ut-acl\": file.acl\n                    }\n                });\n                return {\n                    url,\n                    key\n                };\n            }), {\n            concurrency: \"unbounded\"\n        });\n        const serverReq = yield* HttpServerRequest.HttpServerRequest;\n        const requestUrl = yield* HttpServerRequest.toURL(serverReq);\n        const devHookRequest = yield* Config.string(\"callbackUrl\").pipe(Config.withDefault(requestUrl.origin + requestUrl.pathname), Effect.map((url)=>HttpClientRequest.post(url).pipe(HttpClientRequest.appendUrlParam(\"slug\", slug))));\n        const metadataRequest = HttpClientRequest.post(\"/route-metadata\").pipe(HttpClientRequest.prependUrl(ingestUrl), HttpClientRequest.setHeaders({\n            \"x-uploadthing-api-key\": Redacted.value(apiKey),\n            \"x-uploadthing-version\": version,\n            \"x-uploadthing-be-adapter\": beAdapter,\n            \"x-uploadthing-fe-package\": fePackage\n        }), HttpClientRequest.bodyJson({\n            fileKeys: presignedUrls.map(({ key })=>key),\n            metadata: metadata,\n            isDev,\n            callbackUrl: devHookRequest.url,\n            callbackSlug: slug,\n            awaitServerData: routeOptions.awaitServerData ?? true\n        }), Effect.flatMap(httpClient.execute));\n        const handleDevStreamError = Effect.fn(\"handleDevStreamError\")(function*(err, chunk) {\n            const schema = Schema.parseJson(Schema.Struct({\n                file: UploadedFileData\n            }));\n            const parsedChunk = yield* Schema.decodeUnknown(schema)(chunk);\n            const key = parsedChunk.file.key;\n            yield* Effect.logError(\"Failed to forward callback request from dev stream\").pipe(Effect.annotateLogs({\n                fileKey: key,\n                error: err.message\n            }));\n            const httpResponse = yield* HttpClientRequest.post(\"/callback-result\").pipe(HttpClientRequest.prependUrl(ingestUrl), HttpClientRequest.setHeaders({\n                \"x-uploadthing-api-key\": Redacted.value(apiKey),\n                \"x-uploadthing-version\": version,\n                \"x-uploadthing-be-adapter\": beAdapter,\n                \"x-uploadthing-fe-package\": fePackage\n            }), HttpClientRequest.bodyJson({\n                fileKey: key,\n                error: `Failed to forward callback request from dev stream: ${err.message}`\n            }), Effect.flatMap(httpClient.execute));\n            yield* logHttpClientResponse(\"Reported callback error to UploadThing\")(httpResponse);\n        });\n        // Send metadata to UT server (non blocking as a daemon)\n        // In dev, keep the stream open and simulate the callback requests as\n        // files complete uploading\n        const fiber = yield* Effect.if(isDev, {\n            onTrue: ()=>metadataRequest.pipe(Effect.tapBoth({\n                    onSuccess: logHttpClientResponse(\"Registered metadata\", {\n                        mixin: \"None\"\n                    }),\n                    onFailure: logHttpClientError(\"Failed to register metadata\")\n                }), HttpClientResponse.stream, handleJsonLineStream(MetadataFetchStreamPart, (chunk)=>devHookRequest.pipe(HttpClientRequest.setHeaders({\n                        \"uploadthing-hook\": chunk.hook,\n                        \"x-uploadthing-signature\": chunk.signature\n                    }), HttpClientRequest.setBody(HttpBody.text(chunk.payload, \"application/json\")), httpClient.execute, Effect.tap(logHttpClientResponse(\"Successfully forwarded callback request from dev stream\")), Effect.catchTag(\"ResponseError\", (err)=>handleDevStreamError(err, chunk.payload)), Effect.annotateLogs(chunk), Effect.asVoid, Effect.ignoreLogged, Effect.scoped))),\n            onFalse: ()=>metadataRequest.pipe(Effect.tapBoth({\n                    onSuccess: logHttpClientResponse(\"Registered metadata\"),\n                    onFailure: logHttpClientError(\"Failed to register metadata\")\n                }), Effect.flatMap(HttpClientResponse.schemaBodyJson(MetadataFetchResponse)), Effect.scoped)\n        }).pipe(Effect.forkDaemon);\n        const presigneds = presignedUrls.map((p, i)=>({\n                url: p.url,\n                key: p.key,\n                name: fileUploadRequests[i].name,\n                customId: fileUploadRequests[i].customId ?? null\n            }));\n        yield* Effect.logInfo(\"Sending presigned URLs to client\").pipe(Effect.annotateLogs(\"presignedUrls\", presigneds));\n        return {\n            body: presigneds,\n            fiber\n        };\n    }).pipe(Effect.withLogSpan(\"handleUploadAction\"));\n\nexport { AdapterArguments, createRequestHandler, makeAdapterHandler };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1044, "column": 0}, "map": {"version":3,"sources":["file:///Users/sodstar/development/web/frontend/x/node_modules/uploadthing/next/index.js"],"sourcesContent":["import * as Effect from 'effect/Effect';\nimport { makeAdapterHandler } from '../dist/_internal/handler.js';\nimport { createBuilder } from '../dist/_internal/upload-builder.js';\nexport { UTFiles } from '../dist/_internal/types.js';\n\nconst createUploadthing = (opts)=>createBuilder(opts);\nconst createRouteHandler = (opts)=>{\n    const handler = makeAdapterHandler((req)=>Effect.succeed({\n            req,\n            res: undefined,\n            event: undefined\n        }), (req)=>Effect.succeed(req), opts, \"nextjs-app\");\n    return {\n        POST: handler,\n        GET: handler\n    };\n};\n\nexport { createRouteHandler, createUploadthing };\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;;AAKA,MAAM,oBAAoB,CAAC,OAAO,CAAA,GAAA,uKAAA,CAAA,gBAAa,AAAD,EAAE;AAChD,MAAM,qBAAqB,CAAC;IACxB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,qBAAkB,AAAD,EAAE,CAAC,MAAM,kJAAO,OAAO,CAAC;YACjD;YACA,KAAK;YACL,OAAO;QACX,IAAI,CAAC,MAAM,kJAAO,OAAO,CAAC,MAAM,MAAM;IAC1C,OAAO;QACH,MAAM;QACN,KAAK;IACT;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1068, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}